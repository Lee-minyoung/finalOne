<<<<<<< HEAD
{"version":3,"file":"productionPlan-B1QBOxIF.js","sources":["../../../client/src/views/production/ProductSelectModal.vue","../../../client/src/stores/instructionStore.js","../../../client/src/views/production/InstructionModal.vue","../../../client/src/views/production/productionPlan.vue"],"sourcesContent":["<template>\n  <!-- ✅ 외부 클릭 시 닫히는 반투명 모달 -->\n  <div class=\"modal fade show d-block\" style=\"background: rgba(0,0,0,0.5); z-index: 1051;\" @click.self=\"$emit('close')\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <!-- ✅ 모달 헤더 -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title mb-0 fw-bold\">제품 선택</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"$emit('close')\"></button>\n        </div>\n\n        <!-- ✅ 모달 바디 -->\n        <div class=\"modal-body\">\n          <!-- ✅ 검색창 및 등록버튼 -->\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\n            <input type=\"text\" class=\"form-control w-25\" placeholder=\"제품명 검색\" v-model=\"search\" />\n            <button class=\"btn btn-outline-secondary text-dark\" @click=\"$emit('select-product', selectedProd)\">\n              제품 등록\n            </button>\n          </div>\n\n          <!-- ✅ 제품 목록 테이블 -->\n          <table class=\"table table-sm table-bordered text-center\" style=\"min-width: 600px;\">\n            <thead class=\"table-light\">\n              <tr>\n                <th>제품번호</th>\n                <th>제품명</th>\n                <th>현재고량</th>\n                <th>생산필요수량</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"item in filteredProducts\"\n                :key=\"item.prd_no\"\n                @click=\"toggleProdSelection(item)\"\n                :class=\"{ 'table-primary': isSelected(item) }\"\n                style=\"cursor: pointer;\"\n              >\n                <td>{{ item.prd_no }}</td>\n                <td>{{ item.prd_nm }}</td>\n                <td>{{ item.현재고량 }}</td>\n                <td>{{ item.생산필요수량 }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  // 부모로부터 전달받는 props (속성값)\n  props: {\n    prodList: Array,   // 전체 제품 목록 (선택 가능한 제품들)\n    selected: Array    // 이미 선택되어 있는 제품 목록 (초기값으로 사용)\n  },\n\n  // 컴포넌트 내부에서 사용하는 데이터 정의\n  data() {\n    return {\n      search: '',         // 검색어 입력값\n      selectedProd: []    // 사용자가 선택한 제품 목록 (체크 상태 유지)\n    }\n  },\n\n  // 계산된 속성 (화면에 반응형으로 자동 갱신됨)\n  computed: {\n    // 검색어를 기준으로 prodList를 필터링한 결과 반환\n    filteredProducts() {\n      return this.prodList.filter(p => p.prd_nm?.includes(this.search));\n    }\n  },\n\n  // 컴포넌트 생성 시 실행 (초기화용)\n  created() {\n    // 부모로부터 전달받은 selected 배열을 복사해서 내부 상태로 저장\n    this.selectedProd = [...this.selected]\n  },\n\n  // 사용자 동작에 따른 메서드 정의\n  methods: {\n    // 제품 선택/해제를 토글 (클릭 시 동작)\n    toggleProdSelection(item) {\n      const index = this.selectedProd.findIndex(p => p.prd_no === item.prd_no)\n      if (index >= 0) {\n        this.selectedProd.splice(index, 1)\n      } else {\n        this.selectedProd.push(item)\n      }\n    },\n\n    // 해당 제품이 현재 선택 상태인지 확인 (UI 표시용)\n    isSelected(item) {\n      return this.selectedProd.some(p => p.prd_no === item.prd_no)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.table-primary {\n  background-color: #cce5ff !important;\n}\n</style>\n","// Pinia의 스토어를 정의하기 위한 함수 import\nimport { defineStore } from 'pinia'\n\n// 'instruction'이라는 이름의 스토어 정의\nexport const useInstructionStore = defineStore('instruction', {\n  // ✅ 상태 정의\n  state: () => ({\n    selectedPlans: [],       // 사용자가 선택한 계획들 (지시용)\n    instructionRows: []      // 지시 입력용 행 리스트 (selectedPlans 기반 자동 생성)\n  }),\n\n  // ✅ 메서드 정의\n  actions: {\n    // 사용자가 선택한 계획들을 상태로 저장하는 함수\n    setSelectedPlans(plans) {\n      this.selectedPlans = plans\n    },\n\n    // selectedPlans를 기반으로 instructionRows를 자동 생성하는 함수\n    generateInstructionRows() {\n      console.log(\"selectedPlans for instruction:\", this.selectedPlans)\n\n      // 선택된 계획 중 수량(qty)이 0보다 큰 것만 지시 대상이 됨\n      this.instructionRows = this.selectedPlans\n      .filter(plan => Number(plan.qty) > 0) // 수량이 있어야 지시 가능\n        .map(plan => {\n          const item = {\n            pdn_pln_no: plan.pdn_pln_no,           // 생산계획 번호\n            pdn_pln_dtl_no: plan.pdn_pln_dtl_no,   // 생산계획 상세 번호\n            prd_no: plan.prd_no,                   // 제품번호\n            prd_nm: plan.prd_nm,                   // 제품명\n            qty: plan.qty,                         // 전체 계획수량\n            instruction_qty: plan.instruction_qty || plan.qty - plan.ord_qty || 0, // 지시 수량 (기본값: 계획수량 - 누적지시시수량)\n            ord_qty: plan.ord_qty || 0,            // 주문 수량\n            rmk: plan.rmk || ''                    // 비고\n          }\n          console.log(\"instructionRow 생성:\", item)\n          return item\n        })\n    },\n\n    // 상태 초기화: 지시모달 닫을 때 주로 사용\n    reset() {\n      this.selectedPlans = []      // 선택된 계획 초기화\n      this.instructionRows = []    // 지시 입력 행 초기화\n    }\n  }\n})\n","<template>\n  <!-- ✅ 배경 클릭 시 닫힘 -->\n  <div class=\"modal fade show d-block\" style=\"background: rgba(0,0,0,0.5); z-index: 1051;\" @click.self=\"$emit('close')\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- ✅ 모달 헤더 -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title mb-0 fw-bold\">계획 지시</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"$emit('close')\"></button>\n        </div>\n\n        <!-- ✅ 모달 바디 -->\n        <div class=\"modal-body\">\n\n          <!-- ✅ 지시 상세 입력 테이블 -->\n          <h6 class=\"fw-bold mb-2\">지시 상세 입력</h6>\n          <table class=\"table table-sm table-bordered text-center\">\n            <thead class=\"table-light\">\n              <tr>\n                <th>제품명</th>\n                <th>계획수량</th>\n                <th>누적지시수량</th>\n                <th>미지시수량</th>\n                <th>지시수량</th>\n                <th>완료수량</th>\n                <th>비고</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(row, index) in instructionStore.instructionRows\" :key=\"row.pdn_pln_dtl_no\">\n                <td>{{ row.prd_nm }}</td>\n                <td>{{ formatNumber(row.qty) }}</td>\n                <td>{{ formatNumber(row.ord_qty) }}</td>\n                <td>{{ formatNumber(row.qty - row.ord_qty - row.instruction_qty || 0) }}</td>\n                <td style=\"width: 100px;\">\n                  <!-- <input type=\"number\" class=\"form-control\" v-model.number=\"row.instruction_qty\" /> -->\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    v-model.number=\"row.instruction_qty\"\n                    min=\"0\"\n                    :max=\"row.qty - row.ord_qty\"\n                    @input=\"handleInput(index)\"\n                  />\n                </td>\n                <td></td>\n                <td>\n                  <input class=\"form-control\" v-model=\"row.rmk\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- ✅ 모달 푸터 -->\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-primary\" @click=\"submit\">지시 등록</button>\n          <button class=\"btn btn-outline-secondary text-dark\" @click=\"$emit('close')\">취소</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useInstructionStore } from '../../stores/instructionStore';\n\nexport default {\n  name: 'InstructionModal',\n  emits: ['submit', 'close'],\n\n  computed: {\n    instructionStore() {\n      return useInstructionStore()\n    },\n    rows() {\n      return this.instructionStore.instructionRows\n    }\n  },\n\n  methods: {\n    // ---------------------여기부터 리뷰 -------------------------\n    handleInput(index) {\n      const row = this.instructionStore.instructionRows[index]\n      if (row.instruction_qty > row.qty) {\n        row.instruction_qty = row.qty\n      } else if (row.instruction_qty < 0 || isNaN(row.instruction_qty)) {\n        row.instruction_qty = 0\n      }\n    },\n    // ---------------------여기부터 까지 -------------------------\n    submit() {\n      const rows = this.instructionStore.instructionRows\n\n      console.log(\"🔥 지시 등록 emit 실행됨!\")\n      console.log(\"전송할 rows:\", rows)\n\n      this.$emit('submit') // 부모에서     처리함\n    },\n          formatNumber(n) {\n    if (n == null || isNaN(n)) return '-'\n    return new Intl.NumberFormat().format(n)\n  },\n\n  }\n}\n</script>\n\n<style scoped>\n.table td,\n.table th {\n  vertical-align: middle;\n}\n</style>\n","<template>\n\n  <div class=\"container mt-4\">\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <h2 class=\"mb-4\">생산 계획 관리</h2>\n\n      <div class=\"d-flex gap-2\">\n        <div class=\"mb-１ d-flex justify-content\">\n          <select v-model=\"statusFilter\" class=\"form-select w-auto\">\n            <option value=\"전체\">전체</option>\n            <option value=\"미지시/부분지시\">미지시/부분지시</option>\n            <option value=\"지시완료\">지시완료</option>\n            <option value=\"생산완료\">생산완료</option>\n          </select>\n        </div>\n        <button class=\"btn btn-warning text-white\" @click=\"resetAll\">초기화</button>\n        <!-- <button class=\"btn btn-light\">재고/지시현황</button> -->\n        <button class=\"btn btn-success text-white\" @click=\"openProductModal\">제품등록</button>\n        <button class=\"btn btn-success text-white\" @click=\"addPlan\">계획등록</button>\n        <button class=\"btn btn-primary\" @click=\"openInstructionModal\">계획지시</button>\n      </div>\n    </div>\n    <table class=\"table table-bordered text-center\" style=\"min-width: 1200px;\">\n      <colgroup>\n        <col style=\"width: 80px\" />\n        <col style=\"width: 160px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 140px\" />\n        <col style=\"width: 140px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 120px\" />\n        <col style=\"width: 120px\" />\n        <col style=\"width: 60px\" />\n      </colgroup>\n\n      <thead class=\"table-light\">\n        <tr>\n          <th>계획번호</th>\n          <th>제품명</th>\n          <th>계획수량</th>\n          <th>누적지시량</th>\n          <th>계획시작일자</th>\n          <th>계획마감일자</th>\n          <th>진행률</th>\n          <th>상태</th>\n          <th>비고</th>\n          <th>삭제</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, index) in planRows\" :key=\"'new-' + index\">\n          <td>신규</td>\n          <td>\n            <div class=\"input-group\">\n              <input v-model=\"row.prd_nm\" class=\"form-control\" placeholder=\"제품 선택\" readonly />\n            </div>\n          </td>\n          <td><input type=\"text\" class=\"form-control text-end\" :value=\"formatNumber(row.qty)\"\n              @input=\"onFormattedQtyInput($event, row)\" placeholder=\"수량\" :min=\"0\"/></td>\n          <td></td>\n          <td><input v-model=\"row.st_dt\" type=\"date\" class=\"form-control\" /></td>\n          <td><input v-model=\"row.end_dt\" type=\"date\" class=\"form-control\" /></td>\n          <td></td>\n          <td></td>\n          <td><input v-model=\"row.rmk\" class=\"form-control\" placeholder=\"비고 입력\" /></td>\n          <td>\n            <button class=\"btn btn-outline-danger btn-sm me-1\" @click=\"removePlanRow(index)\" v-if=\"planRows.length > 0\">\n              - </button>\n          </td>\n        </tr>\n        <!--@click=\"!isFullyInstructed(row) && togglePlanSelection(row)\"  지시완료되면 선택이 안됨 \n            :class=\"[isSelected(row) ? 'table-primary' : '', isFullyInstructed(row) ? 'text-muted' : '']\"\n            클래스를 동적으로 사용 isSelected 선택시 파란색 배경, isFullyInstructed 지시완료시 회색 글씨 \\\n            style 지시 완료면 마우스모양 : 아니면 손가락모양 표현-->\n        <tr v-for=\"row in sortedProdPlanList\" :key=\"row.pdn_pln_no\"\n          @click=\"!isFullyInstructed(row) && togglePlanSelection(row)\"\n          :class=\"[isSelected(row) ? 'table-primary' : '', isFullyInstructed(row) ? 'text-muted' : '']\"\n          :style=\"isFullyInstructed(row) ? 'pointer-events: none; opacity: 0.6;' : 'cursor: pointer;'\">\n          <td>{{ row.pdn_pln_no }}</td>\n          <td>{{ row.prd_nm }}</td>\n          <td>{{ formatNumber(row.qty) }}</td>\n          <td>{{ formatNumber(row.ord_qty) }}</td>\n          <td>{{ dateFormat(row.st_dt, 'yyyy-MM-dd') }}</td>\n          <td>{{ dateFormat(row.end_dt, 'yyyy-MM-dd') }}</td>\n          <td>{{ getProgress(row.qty, row.ord_qty) }}%</td>\n          <td>\n            <!-- :style=\"{ width: getProgress(row.qty, row.ord_qty) + '%' }\" \n             여기가 퍼센트에 따라 진행률 바 체워짐-->\n            <div class=\"progress\" style=\"height: 22px;\">\n              <div class=\"progress-bar\" :class=\"getProgressBarClass(row.qty, row.ord_qty, row.sts)\"\n                :style=\"{ width: getProgress(row.qty, row.ord_qty) + '%' }\" role=\"progressbar\">\n                {{ getStatus(row.qty, row.ord_qty, row.sts) }}\n              </div>\n            </div>\n          </td>\n          <td>{{ row.rmk }}</td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ProductSelectModal v-if=\"showProductModal\" :prodList=\"prodList\" :selected=\"planRows\"\n      @select-product=\"handleSelectedProducts\" @close=\"showProductModal = false\" />\n\n    <InstructionModal v-if=\"showInstructionModal\" @submit=\"submitInstructions\" @close=\"showInstructionModal = false\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport useDateUtils from '@/utils/useDates.js'\nimport ProductSelectModal from '@/views/production/ProductSelectModal.vue'\nimport InstructionModal from '@/views/production/InstructionModal.vue'\nimport { useInstructionStore } from '@/stores/instructionStore'\nimport { useEmpStore } from \"@/stores/empStore.js\"\nimport Swal from 'sweetalert2'\n\nexport default {\n  name: 'ProductionPlan',\n  components: { ProductSelectModal, InstructionModal },\n  data() {\n    return {\n      prodPlanList: [],\n      planRows: [\n        // { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', status: '계획완료' }\n      ],\n      showProductModal: false,\n      showInstructionModal: false,\n      prodList: [],\n      empStore: useEmpStore(),\n      statusFilter: '미지시/부분지시',\n      today: this.getTodayDate()\n    }\n  },\n  computed: {\n    instructionStore() {\n      return useInstructionStore()\n    },\n    employeeName() {\n      return this.empStore.loginInfo.nm || ''\n    },\n    employeeNo() {\n      return this.empStore.loginInfo.emp_no || ''\n    },\n    sortedProdPlanList() {\n      const filtered = this.prodPlanList.filter(row => {\n        const percent = this.getProgress(row.qty, row.ord_qty, row.sts)\n        const status = row.sts\n        if (this.statusFilter === '전체') return true\n        if (this.statusFilter === '미지시/부분지시') return percent < 100\n        if (this.statusFilter === '지시완료') return percent >= 100 && status !== 's3'\n        if (this.statusFilter === '생산완료') return percent >= 100 && status === 's3'\n        return true\n      })\n      return [...filtered].sort((a, b) => {\n        const aDone = Number(a.ord_qty || 0) >= Number(a.qty || 0)\n        const bDone = Number(b.ord_qty || 0) >= Number(b.qty || 0)\n        return aDone - bDone\n      })\n    }\n  },\n  mounted() {\n    this.getProdPlanList()\n  },\n  methods: {\n    async getProdPlanList() {\n      try {\n        const result = await axios.get('/api/prodpln')\n        this.prodPlanList = result.data\n      } catch (err) {\n        console.error('계획 목록 불러오기 실패', err)\n      }\n    },\n    dateFormat(value, format) {\n      return useDateUtils.dateFormat(value, format)\n    },\n    isFullyInstructed(row) {\n      return Number(row.ord_qty || 0) >= Number(row.qty || 0)\n    },\n    isSelected(row) {\n      return this.instructionStore.selectedPlans.some(p => p.pdn_pln_dtl_no === row.pdn_pln_dtl_no)\n    },\n    getProgress(planQty, instQty) {\n      const qty = Number(planQty || 0)\n      const instructed = Number(instQty || 0)\n      if (qty === 0) return 0\n      return Math.round((instructed / qty) * 100)\n    },\n    getStatus(planQty, instQty, sts) {\n      const percent = this.getProgress(planQty, instQty)\n      if (percent === 0) return '계획완료'\n      if (percent < 100) return '부분지시'\n      if (percent >= 100) return sts === 's3' ? '생산완료' : '지시완료'\n      return '오류'\n    },\n    getProgressBarClass(planQty, instQty, sts) {\n      const percent = this.getProgress(planQty, instQty)\n      if (percent === 0) return 'bg-secondary'\n      if (percent < 100) return 'bg-warning text-dark'\n      return sts === 's3' ? 'bg-primary' : 'bg-success'\n    },\n    removePlanRow(index) {\n      this.planRows.splice(index, 1)\n    },\n    resetAll() {\n      if (!confirm('정말 초기화 하시겠습니까? 입력값이 모두 사라집니다.')) return\n      this.planRows = [\n        { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', sts: '계획완료' }\n      ]\n      this.instructionStore.selectedPlans = []\n      this.instructionStore.generateInstructionRows()\n      this.showInstructionModal = false\n    },\n    async addPlan() {\n      try {\n        const submittedList = []\n        for (let row of this.planRows) {\n          if (!row.prd_no || row.qty <= 0 || !row.st_dt || !row.end_dt) {\n            alert('모든 항목을 올바르게 입력하세요.')\n            return\n          }\n          await axios.post('/api/prodpln', {\n            ...row,\n            crt_by: this.empStore.loginInfo.emp_no\n          }, {\n            headers: { 'Content-Type': 'application/json' }\n          })\n          submittedList.push(row)\n        }\n        const itemList = submittedList.map(item => `<li>${item.prd_nm} (${item.qty}개)</li>`).join('')\n        await Swal.fire({\n          title: '✅ 계획 등록 완료!',\n          html: `<ul style=\"text-align:left; padding-left:1.2rem; margin:0;\">${itemList}</ul>`,\n          icon: 'success',\n          confirmButtonText: '확인'\n        })\n        this.planRows = [\n          { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', sts: 's1' }\n        ]\n        this.getProdPlanList()\n      } catch (err) {\n        console.error('등록 실패', err)\n        await Swal.fire('❌ 실패', '계획 등록 실패', 'error')\n      }\n    },\n    openProductModal() {\n      axios.get('/api/prodpln/prdList')\n        .then(res => {\n          this.prodList = res.data\n          this.showProductModal = true\n        })\n        .catch(err => {\n          console.error('제품 목록 불러오기 실패', err)\n        })\n    },\n    handleSelectedProducts(selectedList) {\n      let updatedRows = [...this.planRows]\n      const existingPrdNos = new Set(updatedRows.map(r => r.prd_no))\n      let productIndex = 0\n      for (let i = 0; i < updatedRows.length && productIndex < selectedList.length; i++) {\n        const row = updatedRows[i]\n        const product = selectedList[productIndex]\n        if (!row.prd_no && !existingPrdNos.has(product.prd_no)) {\n          row.prd_no = product.prd_no\n          row.prd_nm = product.prd_nm\n          existingPrdNos.add(product.prd_no)\n          productIndex++\n        }\n      }\n      for (const product of selectedList) {\n        if (!existingPrdNos.has(product.prd_no)) {\n          updatedRows.push({\n            prd_no: product.prd_no,\n            prd_nm: product.prd_nm,\n            qty: '',\n            st_dt: '',\n            end_dt: '',\n            rmk: '',\n            crt_by: this.empStore.loginInfo.emp_no,\n            status: '계획완료'\n          })\n          existingPrdNos.add(product.prd_no)\n        }\n      }\n      this.planRows = updatedRows.filter(row =>\n        row.prd_no && selectedList.some(sel => sel.prd_no === row.prd_no)\n      )\n      this.showProductModal = false\n    },\n    togglePlanSelection(row) {\n      const index = this.instructionStore.selectedPlans.findIndex(p => p.pdn_pln_no === row.pdn_pln_no)\n      if (index >= 0) {\n        this.instructionStore.selectedPlans.splice(index, 1)\n      } else {\n        this.instructionStore.selectedPlans.push(row)\n      }\n    },\n    openInstructionModal() {\n      if (this.instructionStore.selectedPlans.length === 0) {\n        alert(\"지시할 계획을 선택해주세요.\")\n        return\n      }\n      this.instructionStore.selectedPlans = this.instructionStore.selectedPlans.map(plan => ({\n        ...plan,\n        prd_no: plan.prd_no || plan.prd.prd_no || '',\n        pdn_pln_dtl_no: plan.pdn_pln_dtl_no || '',\n      }))\n      this.instructionStore.generateInstructionRows()\n      this.showInstructionModal = true\n    },\n    async submitInstructions() {\n      const rows = this.instructionStore.instructionRows\n      const grouped = {}\n      for (const row of rows) {\n        if (row.instruction_qty <= 0 || row.instruction_qty > row.qty) {\n          alert(`지시수량 오류 (제품: ${row.prd_nm || row.prd_no})`)\n          return\n        }\n        const key = row.pdn_pln_no\n        if (!grouped[key]) grouped[key] = []\n        grouped[key].push({\n          pdn_pln_dtl_no: row.pdn_pln_dtl_no,\n          prd_no: row.prd_no,\n          instruction_qty: row.instruction_qty,\n          ord_sts: 's1',\n          crt_by: this.empStore.loginInfo.emp_no,\n          rmk: row.rmk\n        })\n      }\n      try {\n        for (const [pdn_pln_no, details] of Object.entries(grouped)) {\n          const payload = { pdn_pln_no, details }\n          await axios.post('/api/prodinst', {\n            ...payload,\n            crt_by: this.empStore.loginInfo.emp_no\n          }, {\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n        const itemList = rows.map(item =>\n          `<li>${item.prd_nm} : ${item.instruction_qty}개</li>`).join('')\n        await Swal.fire({\n          title: '🎉 지시 등록 완료!',\n          html: `<ul style=\"text-align:left; padding-left:1.2rem; margin:0;\">${itemList}</ul>`,\n          icon: 'success',\n          confirmButtonText: '확인'\n        })\n        this.showInstructionModal = false\n        this.instructionStore.reset()\n        this.getProdPlanList()\n      } catch (err) {\n        console.error(\"지시 등록 실패\", err.response?.data || err.message)\n        await Swal.fire('❌ 실패', '지시 등록 중 오류 발생', 'error')\n      }\n    },\n    formatNumber(n) {\n      if (n == null || isNaN(n)) return '-'\n      return new Intl.NumberFormat().format(n)\n    },\n    onFormattedQtyInput(event, row) {\n      const raw = event.target.value.replace(/[^\\d]/g, '') // 숫자만 추출\n      const num = Number(raw)\n      row.qty = Math.max(0, num) // 최소 0 보장\n    },\n    // preventMinusInput(event) {\n    //   if (event.key === '-' || event.key === '+' || event.key === 'e') {\n    //     event.preventDefault()\n    //   }\n    // }\n    getTodayDate() {\n    const today = new Date()\n    const yyyy = today.getFullYear()\n    const mm = String(today.getMonth() + 1).padStart(2, '0') // 월은 0부터 시작\n    const dd = String(today.getDate()).padStart(2, '0')\n    return `${yyyy}-${mm}-${dd}` // date input 형식: yyyy-mm-dd\n  }\n  }\n}\n</script>\n\n\n\n\n<style scoped>\nh2 {\n  font-weight: bold;\n  text-align: left;\n}\n\n.table td,\n.table th {\n  vertical-align: middle;\n}\n\n.table-primary {\n  background-color: #cce5ff !important;\n}\n</style>"],"names":["_sfc_main","p","_a","item","index","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_7","_createElementBlock","_cache","_withModifiers","_ctx","_createElementVNode","$event","$data","_hoisted_6","_openBlock","_Fragment","_renderList","$options","_normalizeClass","_toDisplayString","useInstructionStore","defineStore","plans","plan","row","rows","_hoisted_8","_hoisted_9","_vModelText","args","ProductSelectModal","InstructionModal","useEmpStore","percent","status","a","b","aDone","bDone","result","axios","err","value","format","useDateUtils","planQty","instQty","qty","instructed","sts","submittedList","itemList","Swal","res","selectedList","updatedRows","existingPrdNos","r","productIndex","i","product","sel","grouped","key","pdn_pln_no","details","payload","event","raw","num","today","yyyy","mm","dd","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createCommentVNode","_normalizeStyle","_hoisted_14","_createBlock","_component_ProductSelectModal","_component_InstructionModal"],"mappings":"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"}
=======
<<<<<<< HEAD
<<<<<<<< HEAD:server/public/assets/productionPlan-BLe1ioKA.js.map
{"version":3,"file":"productionPlan-BLe1ioKA.js","sources":["../../../client/src/views/production/ProductSelectModal.vue","../../../client/src/stores/instructionStore.js","../../../client/src/views/production/InstructionModal.vue","../../../client/src/views/production/productionPlan.vue"],"sourcesContent":["<template>\n  <!-- ✅ 외부 클릭 시 닫히는 반투명 모달 -->\n  <div class=\"modal fade show d-block\" style=\"background: rgba(0,0,0,0.5); z-index: 1051;\" @click.self=\"$emit('close')\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <!-- ✅ 모달 헤더 -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title mb-0 fw-bold\">제품 선택</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"$emit('close')\"></button>\n        </div>\n\n        <!-- ✅ 모달 바디 -->\n        <div class=\"modal-body\">\n          <!-- ✅ 검색창 및 등록버튼 -->\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\n            <input type=\"text\" class=\"form-control w-25\" placeholder=\"제품명 검색\" v-model=\"search\" />\n            <button class=\"btn btn-outline-secondary text-dark\" @click=\"$emit('select-product', selectedProd)\">\n              제품 등록\n            </button>\n          </div>\n\n          <!-- ✅ 제품 목록 테이블 -->\n          <table class=\"table table-sm table-bordered text-center\" style=\"min-width: 600px;\">\n            <thead class=\"table-light\">\n              <tr>\n                <th>제품번호</th>\n                <th>제품명</th>\n                <th>현재고량</th>\n                <th>생산필요수량</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"item in filteredProducts\"\n                :key=\"item.prd_no\"\n                @click=\"toggleProdSelection(item)\"\n                :class=\"{ 'table-primary': isSelected(item) }\"\n                style=\"cursor: pointer;\"\n              >\n                <td>{{ item.prd_no }}</td>\n                <td>{{ item.prd_nm }}</td>\n                <td>{{ item.현재고량 }}</td>\n                <td>{{ item.생산필요수량 }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  // 부모로부터 전달받는 props (속성값)\n  props: {\n    prodList: Array,   // 전체 제품 목록 (선택 가능한 제품들)\n    selected: Array    // 이미 선택되어 있는 제품 목록 (초기값으로 사용)\n  },\n\n  // 컴포넌트 내부에서 사용하는 데이터 정의\n  data() {\n    return {\n      search: '',         // 검색어 입력값\n      selectedProd: []    // 사용자가 선택한 제품 목록 (체크 상태 유지)\n    }\n  },\n\n  // 계산된 속성 (화면에 반응형으로 자동 갱신됨)\n  computed: {\n    // 검색어를 기준으로 prodList를 필터링한 결과 반환\n    filteredProducts() {\n      return this.prodList.filter(p => p.prd_nm?.includes(this.search));\n    }\n  },\n\n  // 컴포넌트 생성 시 실행 (초기화용)\n  created() {\n    // 부모로부터 전달받은 selected 배열을 복사해서 내부 상태로 저장\n    this.selectedProd = [...this.selected]\n  },\n\n  // 사용자 동작에 따른 메서드 정의\n  methods: {\n    // 제품 선택/해제를 토글 (클릭 시 동작)\n    toggleProdSelection(item) {\n      const index = this.selectedProd.findIndex(p => p.prd_no === item.prd_no)\n      if (index >= 0) {\n        this.selectedProd.splice(index, 1)\n      } else {\n        this.selectedProd.push(item)\n      }\n    },\n\n    // 해당 제품이 현재 선택 상태인지 확인 (UI 표시용)\n    isSelected(item) {\n      return this.selectedProd.some(p => p.prd_no === item.prd_no)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.table-primary {\n  background-color: #cce5ff !important;\n}\n</style>\n","// Pinia의 스토어를 정의하기 위한 함수 import\nimport { defineStore } from 'pinia'\n\n// 'instruction'이라는 이름의 스토어 정의\nexport const useInstructionStore = defineStore('instruction', {\n  // ✅ 상태 정의\n  state: () => ({\n    selectedPlans: [],       // 사용자가 선택한 계획들 (지시용)\n    instructionRows: []      // 지시 입력용 행 리스트 (selectedPlans 기반 자동 생성)\n  }),\n\n  // ✅ 메서드 정의\n  actions: {\n    // 사용자가 선택한 계획들을 상태로 저장하는 함수\n    setSelectedPlans(plans) {\n      this.selectedPlans = plans\n    },\n\n    // selectedPlans를 기반으로 instructionRows를 자동 생성하는 함수\n    generateInstructionRows() {\n      console.log(\"selectedPlans for instruction:\", this.selectedPlans)\n\n      // 선택된 계획 중 수량(qty)이 0보다 큰 것만 지시 대상이 됨\n      this.instructionRows = this.selectedPlans\n      .filter(plan => Number(plan.qty) > 0) // 수량이 있어야 지시 가능\n        .map(plan => {\n          const item = {\n            pdn_pln_no: plan.pdn_pln_no,           // 생산계획 번호\n            pdn_pln_dtl_no: plan.pdn_pln_dtl_no,   // 생산계획 상세 번호\n            prd_no: plan.prd_no,                   // 제품번호\n            prd_nm: plan.prd_nm,                   // 제품명\n            qty: plan.qty,                         // 전체 계획수량\n            instruction_qty: plan.instruction_qty || plan.qty - plan.ord_qty || 0, // 지시 수량 (기본값: 계획수량 - 누적지시시수량)\n            ord_qty: plan.ord_qty || 0,            // 주문 수량\n            rmk: plan.rmk || ''                    // 비고\n          }\n          console.log(\"instructionRow 생성:\", item)\n          return item\n        })\n    },\n\n    // 상태 초기화: 지시모달 닫을 때 주로 사용\n    reset() {\n      this.selectedPlans = []      // 선택된 계획 초기화\n      this.instructionRows = []    // 지시 입력 행 초기화\n    }\n  }\n})\n","<template>\n  <!-- ✅ 배경 클릭 시 닫힘 -->\n  <div class=\"modal fade show d-block\" style=\"background: rgba(0,0,0,0.5); z-index: 1051;\" @click.self=\"$emit('close')\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- ✅ 모달 헤더 -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title mb-0 fw-bold\">계획 지시</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"$emit('close')\"></button>\n        </div>\n\n        <!-- ✅ 모달 바디 -->\n        <div class=\"modal-body\">\n\n          <!-- ✅ 지시 상세 입력 테이블 -->\n          <h6 class=\"fw-bold mb-2\">지시 상세 입력</h6>\n          <table class=\"table table-sm table-bordered text-center\">\n            <thead class=\"table-light\">\n              <tr>\n                <th>제품명</th>\n                <th>계획수량</th>\n                <th>누적지시수량</th>\n                <th>미지시수량</th>\n                <th>지시수량</th>\n                <th>완료수량</th>\n                <th>비고</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(row, index) in instructionStore.instructionRows\" :key=\"row.pdn_pln_dtl_no\">\n                <td>{{ row.prd_nm }}</td>\n                <td>{{ formatNumber(row.qty) }}</td>\n                <td>{{ formatNumber(row.ord_qty) }}</td>\n                <td>{{ formatNumber(row.qty - row.ord_qty - row.instruction_qty || 0) }}</td>\n                <td style=\"width: 100px;\">\n                  <!-- <input type=\"number\" class=\"form-control\" v-model.number=\"row.instruction_qty\" /> -->\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    v-model.number=\"row.instruction_qty\"\n                    min=\"0\"\n                    :max=\"row.qty - row.ord_qty\"\n                    @input=\"handleInput(index)\"\n                  />\n                </td>\n                <td></td>\n                <td>\n                  <input class=\"form-control\" v-model=\"row.rmk\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- ✅ 모달 푸터 -->\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-primary\" @click=\"submit\">지시 등록</button>\n          <button class=\"btn btn-outline-secondary text-dark\" @click=\"$emit('close')\">취소</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useInstructionStore } from '../../stores/instructionStore';\n\nexport default {\n  name: 'InstructionModal',\n  emits: ['submit', 'close'],\n\n  computed: {\n    instructionStore() {\n      return useInstructionStore()\n    },\n    rows() {\n      return this.instructionStore.instructionRows\n    }\n  },\n\n  methods: {\n    // ---------------------여기부터 리뷰 -------------------------\n    handleInput(index) {\n      const row = this.instructionStore.instructionRows[index]\n      if (row.instruction_qty > row.qty) {\n        row.instruction_qty = row.qty\n      } else if (row.instruction_qty < 0 || isNaN(row.instruction_qty)) {\n        row.instruction_qty = 0\n      }\n    },\n    // ---------------------여기부터 까지 -------------------------\n    submit() {\n      const rows = this.instructionStore.instructionRows\n\n      console.log(\"🔥 지시 등록 emit 실행됨!\")\n      console.log(\"전송할 rows:\", rows)\n\n      this.$emit('submit') // 부모에서     처리함\n    },\n          formatNumber(n) {\n    if (n == null || isNaN(n)) return '-'\n    return new Intl.NumberFormat().format(n)\n  },\n\n  }\n}\n</script>\n\n<style scoped>\n.table td,\n.table th {\n  vertical-align: middle;\n}\n</style>\n","<template>\n\n  <div class=\"container mt-4\">\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <h2 class=\"mb-4\">생산 계획 관리</h2>\n\n      <div class=\"d-flex gap-2\">\n        <div class=\"mb-１ d-flex justify-content\">\n          <select v-model=\"statusFilter\" class=\"form-select w-auto\">\n            <option value=\"전체\">전체</option>\n            <option value=\"미지시/부분지시\">미지시/부분지시</option>\n            <option value=\"지시완료\">지시완료</option>\n            <option value=\"생산완료\">생산완료</option>\n          </select>\n        </div>\n        <button class=\"btn btn-warning text-white\" @click=\"resetAll\">초기화</button>\n        <!-- <button class=\"btn btn-light\">재고/지시현황</button> -->\n        <button class=\"btn btn-success text-white\" @click=\"openProductModal\">제품등록</button>\n        <button class=\"btn btn-success text-white\" @click=\"addPlan\">계획등록</button>\n        <button class=\"btn btn-primary\" @click=\"openInstructionModal\">계획지시</button>\n      </div>\n    </div>\n    <table class=\"table table-bordered text-center\" style=\"min-width: 1200px;\">\n      <colgroup>\n        <col style=\"width: 80px\" />\n        <col style=\"width: 160px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 140px\" />\n        <col style=\"width: 140px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 120px\" />\n        <col style=\"width: 120px\" />\n        <col style=\"width: 60px\" />\n      </colgroup>\n\n      <thead class=\"table-light\">\n        <tr>\n          <th>계획번호</th>\n          <th>제품명</th>\n          <th>계획수량</th>\n          <th>누적지시량</th>\n          <th>계획시작일자</th>\n          <th>계획마감일자</th>\n          <th>진행률</th>\n          <th>상태</th>\n          <th>비고</th>\n          <th>삭제</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, index) in planRows\" :key=\"'new-' + index\">\n          <td>신규</td>\n          <td>\n            <div class=\"input-group\">\n              <input v-model=\"row.prd_nm\" class=\"form-control\" placeholder=\"제품 선택\" readonly />\n            </div>\n          </td>\n          <td><input type=\"text\" class=\"form-control text-end\" :value=\"formatNumber(row.qty)\"\n              @input=\"onFormattedQtyInput($event, row)\" placeholder=\"수량\" :min=\"0\"/></td>\n          <td></td>\n          <td><input v-model=\"row.st_dt\" type=\"date\" class=\"form-control\" /></td>\n          <td><input v-model=\"row.end_dt\" type=\"date\" class=\"form-control\" /></td>\n          <td></td>\n          <td></td>\n          <td><input v-model=\"row.rmk\" class=\"form-control\" placeholder=\"비고 입력\" /></td>\n          <td>\n            <button class=\"btn btn-outline-danger btn-sm me-1\" @click=\"removePlanRow(index)\" v-if=\"planRows.length > 0\">\n              - </button>\n          </td>\n        </tr>\n        <!--@click=\"!isFullyInstructed(row) && togglePlanSelection(row)\"  지시완료되면 선택이 안됨 \n            :class=\"[isSelected(row) ? 'table-primary' : '', isFullyInstructed(row) ? 'text-muted' : '']\"\n            클래스를 동적으로 사용 isSelected 선택시 파란색 배경, isFullyInstructed 지시완료시 회색 글씨 \\\n            style 지시 완료면 마우스모양 : 아니면 손가락모양 표현-->\n        <tr v-for=\"row in sortedProdPlanList\" :key=\"row.pdn_pln_no\"\n          @click=\"!isFullyInstructed(row) && togglePlanSelection(row)\"\n          :class=\"[isSelected(row) ? 'table-primary' : '', isFullyInstructed(row) ? 'text-muted' : '']\"\n          :style=\"isFullyInstructed(row) ? 'pointer-events: none; opacity: 0.6;' : 'cursor: pointer;'\">\n          <td>{{ row.pdn_pln_no }}</td>\n          <td>{{ row.prd_nm }}</td>\n          <td>{{ formatNumber(row.qty) }}</td>\n          <td>{{ formatNumber(row.ord_qty) }}</td>\n          <td>{{ dateFormat(row.st_dt, 'yyyy-MM-dd') }}</td>\n          <td>{{ dateFormat(row.end_dt, 'yyyy-MM-dd') }}</td>\n          <td>{{ getProgress(row.qty, row.ord_qty) }}%</td>\n          <td>\n            <!-- :style=\"{ width: getProgress(row.qty, row.ord_qty) + '%' }\" \n             여기가 퍼센트에 따라 진행률 바 체워짐-->\n            <div class=\"progress\" style=\"height: 22px;\">\n              <div class=\"progress-bar\" :class=\"getProgressBarClass(row.qty, row.ord_qty, row.sts)\"\n                :style=\"{ width: getProgress(row.qty, row.ord_qty) + '%' }\" role=\"progressbar\">\n                {{ getStatus(row.qty, row.ord_qty, row.sts) }}\n              </div>\n            </div>\n          </td>\n          <td>{{ row.rmk }}</td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ProductSelectModal v-if=\"showProductModal\" :prodList=\"prodList\" :selected=\"planRows\"\n      @select-product=\"handleSelectedProducts\" @close=\"showProductModal = false\" />\n\n    <InstructionModal v-if=\"showInstructionModal\" @submit=\"submitInstructions\" @close=\"showInstructionModal = false\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport useDateUtils from '@/utils/useDates.js'\nimport ProductSelectModal from '@/views/production/ProductSelectModal.vue'\nimport InstructionModal from '@/views/production/InstructionModal.vue'\nimport { useInstructionStore } from '@/stores/instructionStore'\nimport { useEmpStore } from \"@/stores/empStore.js\"\nimport Swal from 'sweetalert2'\n\nexport default {\n  name: 'ProductionPlan',\n  components: { ProductSelectModal, InstructionModal },\n  data() {\n    return {\n      prodPlanList: [],\n      planRows: [\n        // { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', status: '계획완료' }\n      ],\n      showProductModal: false,\n      showInstructionModal: false,\n      prodList: [],\n      empStore: useEmpStore(),\n      statusFilter: '미지시/부분지시',\n      today: this.getTodayDate()\n    }\n  },\n  computed: {\n    instructionStore() {\n      return useInstructionStore()\n    },\n    employeeName() {\n      return this.empStore.loginInfo.nm || ''\n    },\n    employeeNo() {\n      return this.empStore.loginInfo.emp_no || ''\n    },\n    sortedProdPlanList() {\n      const filtered = this.prodPlanList.filter(row => {\n        const percent = this.getProgress(row.qty, row.ord_qty, row.sts)\n        const status = row.sts\n        if (this.statusFilter === '전체') return true\n        if (this.statusFilter === '미지시/부분지시') return percent < 100\n        if (this.statusFilter === '지시완료') return percent >= 100 && status !== 's3'\n        if (this.statusFilter === '생산완료') return percent >= 100 && status === 's3'\n        return true\n      })\n      return [...filtered].sort((a, b) => {\n        const aDone = Number(a.ord_qty || 0) >= Number(a.qty || 0)\n        const bDone = Number(b.ord_qty || 0) >= Number(b.qty || 0)\n        return aDone - bDone\n      })\n    }\n  },\n  mounted() {\n    this.getProdPlanList()\n  },\n  methods: {\n    async getProdPlanList() {\n      try {\n        const result = await axios.get('/api/prodpln')\n        this.prodPlanList = result.data\n      } catch (err) {\n        console.error('계획 목록 불러오기 실패', err)\n      }\n    },\n    dateFormat(value, format) {\n      return useDateUtils.dateFormat(value, format)\n    },\n    isFullyInstructed(row) {\n      return Number(row.ord_qty || 0) >= Number(row.qty || 0)\n    },\n    isSelected(row) {\n      return this.instructionStore.selectedPlans.some(p => p.pdn_pln_dtl_no === row.pdn_pln_dtl_no)\n    },\n    getProgress(planQty, instQty) {\n      const qty = Number(planQty || 0)\n      const instructed = Number(instQty || 0)\n      if (qty === 0) return 0\n      return Math.round((instructed / qty) * 100)\n    },\n    getStatus(planQty, instQty, sts) {\n      const percent = this.getProgress(planQty, instQty)\n      if (percent === 0) return '계획완료'\n      if (percent < 100) return '부분지시'\n      if (percent >= 100) return sts === 's3' ? '생산완료' : '지시완료'\n      return '오류'\n    },\n    getProgressBarClass(planQty, instQty, sts) {\n      const percent = this.getProgress(planQty, instQty)\n      if (percent === 0) return 'bg-secondary'\n      if (percent < 100) return 'bg-warning text-dark'\n      return sts === 's3' ? 'bg-primary' : 'bg-success'\n    },\n    removePlanRow(index) {\n      this.planRows.splice(index, 1)\n    },\n    resetAll() {\n      if (!confirm('정말 초기화 하시겠습니까? 입력값이 모두 사라집니다.')) return\n      this.planRows = [\n        { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', sts: '계획완료' }\n      ]\n      this.instructionStore.selectedPlans = []\n      this.instructionStore.generateInstructionRows()\n      this.showInstructionModal = false\n    },\n    async addPlan() {\n      try {\n        const submittedList = []\n        for (let row of this.planRows) {\n          if (!row.prd_no || row.qty <= 0 || !row.st_dt || !row.end_dt) {\n            alert('모든 항목을 올바르게 입력하세요.')\n            return\n          }\n          await axios.post('/api/prodpln', {\n            ...row,\n            crt_by: this.empStore.loginInfo.emp_no\n          }, {\n            headers: { 'Content-Type': 'application/json' }\n          })\n          submittedList.push(row)\n        }\n        const itemList = submittedList.map(item => `<li>${item.prd_nm} (${item.qty}개)</li>`).join('')\n        await Swal.fire({\n          title: '✅ 계획 등록 완료!',\n          html: `<ul style=\"text-align:left; padding-left:1.2rem; margin:0;\">${itemList}</ul>`,\n          icon: 'success',\n          confirmButtonText: '확인'\n        })\n        this.planRows = [\n          { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', sts: 's1' }\n        ]\n        this.getProdPlanList()\n      } catch (err) {\n        console.error('등록 실패', err)\n        await Swal.fire('❌ 실패', '계획 등록 실패', 'error')\n      }\n    },\n    openProductModal() {\n      axios.get('/api/prodpln/prdList')\n        .then(res => {\n          this.prodList = res.data\n          this.showProductModal = true\n        })\n        .catch(err => {\n          console.error('제품 목록 불러오기 실패', err)\n        })\n    },\n    handleSelectedProducts(selectedList) {\n      let updatedRows = [...this.planRows]\n      const existingPrdNos = new Set(updatedRows.map(r => r.prd_no))\n      let productIndex = 0\n      for (let i = 0; i < updatedRows.length && productIndex < selectedList.length; i++) {\n        const row = updatedRows[i]\n        const product = selectedList[productIndex]\n        if (!row.prd_no && !existingPrdNos.has(product.prd_no)) {\n          row.prd_no = product.prd_no\n          row.prd_nm = product.prd_nm\n          existingPrdNos.add(product.prd_no)\n          productIndex++\n        }\n      }\n      for (const product of selectedList) {\n        if (!existingPrdNos.has(product.prd_no)) {\n          updatedRows.push({\n            prd_no: product.prd_no,\n            prd_nm: product.prd_nm,\n            qty: '',\n            st_dt: '',\n            end_dt: '',\n            rmk: '',\n            crt_by: this.empStore.loginInfo.emp_no,\n            status: '계획완료'\n          })\n          existingPrdNos.add(product.prd_no)\n        }\n      }\n      this.planRows = updatedRows.filter(row =>\n        row.prd_no && selectedList.some(sel => sel.prd_no === row.prd_no)\n      )\n      this.showProductModal = false\n    },\n    togglePlanSelection(row) {\n      const index = this.instructionStore.selectedPlans.findIndex(p => p.pdn_pln_no === row.pdn_pln_no)\n      if (index >= 0) {\n        this.instructionStore.selectedPlans.splice(index, 1)\n      } else {\n        this.instructionStore.selectedPlans.push(row)\n      }\n    },\n    openInstructionModal() {\n      if (this.instructionStore.selectedPlans.length === 0) {\n        alert(\"지시할 계획을 선택해주세요.\")\n        return\n      }\n      this.instructionStore.selectedPlans = this.instructionStore.selectedPlans.map(plan => ({\n        ...plan,\n        prd_no: plan.prd_no || plan.prd.prd_no || '',\n        pdn_pln_dtl_no: plan.pdn_pln_dtl_no || '',\n      }))\n      this.instructionStore.generateInstructionRows()\n      this.showInstructionModal = true\n    },\n    async submitInstructions() {\n      const rows = this.instructionStore.instructionRows\n      const grouped = {}\n      for (const row of rows) {\n        if (row.instruction_qty <= 0 || row.instruction_qty > row.qty) {\n          alert(`지시수량 오류 (제품: ${row.prd_nm || row.prd_no})`)\n          return\n        }\n        const key = row.pdn_pln_no\n        if (!grouped[key]) grouped[key] = []\n        grouped[key].push({\n          pdn_pln_dtl_no: row.pdn_pln_dtl_no,\n          prd_no: row.prd_no,\n          instruction_qty: row.instruction_qty,\n          ord_sts: 's1',\n          crt_by: this.empStore.loginInfo.emp_no,\n          rmk: row.rmk\n        })\n      }\n      try {\n        for (const [pdn_pln_no, details] of Object.entries(grouped)) {\n          const payload = { pdn_pln_no, details }\n          await axios.post('/api/prodinst', {\n            ...payload,\n            crt_by: this.empStore.loginInfo.emp_no\n          }, {\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n        const itemList = rows.map(item =>\n          `<li>${item.prd_nm} : ${item.instruction_qty}개</li>`).join('')\n        await Swal.fire({\n          title: '🎉 지시 등록 완료!',\n          html: `<ul style=\"text-align:left; padding-left:1.2rem; margin:0;\">${itemList}</ul>`,\n          icon: 'success',\n          confirmButtonText: '확인'\n        })\n        this.showInstructionModal = false\n        this.instructionStore.reset()\n        this.getProdPlanList()\n      } catch (err) {\n        console.error(\"지시 등록 실패\", err.response?.data || err.message)\n        await Swal.fire('❌ 실패', '지시 등록 중 오류 발생', 'error')\n      }\n    },\n    formatNumber(n) {\n      if (n == null || isNaN(n)) return '-'\n      return new Intl.NumberFormat().format(n)\n    },\n    onFormattedQtyInput(event, row) {\n      const raw = event.target.value.replace(/[^\\d]/g, '') // 숫자만 추출\n      const num = Number(raw)\n      row.qty = Math.max(0, num) // 최소 0 보장\n    },\n    // preventMinusInput(event) {\n    //   if (event.key === '-' || event.key === '+' || event.key === 'e') {\n    //     event.preventDefault()\n    //   }\n    // }\n    getTodayDate() {\n    const today = new Date()\n    const yyyy = today.getFullYear()\n    const mm = String(today.getMonth() + 1).padStart(2, '0') // 월은 0부터 시작\n    const dd = String(today.getDate()).padStart(2, '0')\n    return `${yyyy}-${mm}-${dd}` // date input 형식: yyyy-mm-dd\n  }\n  }\n}\n</script>\n\n\n\n\n<style scoped>\nh2 {\n  font-weight: bold;\n  text-align: left;\n}\n\n.table td,\n.table th {\n  vertical-align: middle;\n}\n\n.table-primary {\n  background-color: #cce5ff !important;\n}\n</style>"],"names":["_sfc_main","p","_a","item","index","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_7","_createElementBlock","_cache","_withModifiers","_ctx","_createElementVNode","$event","$data","_hoisted_6","_openBlock","_Fragment","_renderList","$options","_normalizeClass","_toDisplayString","useInstructionStore","defineStore","plans","plan","row","rows","_hoisted_8","_hoisted_9","_vModelText","args","ProductSelectModal","InstructionModal","useEmpStore","percent","status","a","b","aDone","bDone","result","axios","err","value","format","useDateUtils","planQty","instQty","qty","instructed","sts","submittedList","itemList","Swal","res","selectedList","updatedRows","existingPrdNos","r","productIndex","i","product","sel","grouped","key","pdn_pln_no","details","payload","event","raw","num","today","yyyy","mm","dd","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createCommentVNode","_normalizeStyle","_hoisted_14","_createBlock","_component_ProductSelectModal","_component_InstructionModal"],"mappings":"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"}
========
{"version":3,"file":"productionPlan-B1QBOxIF.js","sources":["../../../client/src/views/production/ProductSelectModal.vue","../../../client/src/stores/instructionStore.js","../../../client/src/views/production/InstructionModal.vue","../../../client/src/views/production/productionPlan.vue"],"sourcesContent":["<template>\n  <!-- ✅ 외부 클릭 시 닫히는 반투명 모달 -->\n  <div class=\"modal fade show d-block\" style=\"background: rgba(0,0,0,0.5); z-index: 1051;\" @click.self=\"$emit('close')\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <!-- ✅ 모달 헤더 -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title mb-0 fw-bold\">제품 선택</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"$emit('close')\"></button>\n        </div>\n\n        <!-- ✅ 모달 바디 -->\n        <div class=\"modal-body\">\n          <!-- ✅ 검색창 및 등록버튼 -->\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\n            <input type=\"text\" class=\"form-control w-25\" placeholder=\"제품명 검색\" v-model=\"search\" />\n            <button class=\"btn btn-outline-secondary text-dark\" @click=\"$emit('select-product', selectedProd)\">\n              제품 등록\n            </button>\n          </div>\n\n          <!-- ✅ 제품 목록 테이블 -->\n          <table class=\"table table-sm table-bordered text-center\" style=\"min-width: 600px;\">\n            <thead class=\"table-light\">\n              <tr>\n                <th>제품번호</th>\n                <th>제품명</th>\n                <th>현재고량</th>\n                <th>생산필요수량</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"item in filteredProducts\"\n                :key=\"item.prd_no\"\n                @click=\"toggleProdSelection(item)\"\n                :class=\"{ 'table-primary': isSelected(item) }\"\n                style=\"cursor: pointer;\"\n              >\n                <td>{{ item.prd_no }}</td>\n                <td>{{ item.prd_nm }}</td>\n                <td>{{ item.현재고량 }}</td>\n                <td>{{ item.생산필요수량 }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  // 부모로부터 전달받는 props (속성값)\n  props: {\n    prodList: Array,   // 전체 제품 목록 (선택 가능한 제품들)\n    selected: Array    // 이미 선택되어 있는 제품 목록 (초기값으로 사용)\n  },\n\n  // 컴포넌트 내부에서 사용하는 데이터 정의\n  data() {\n    return {\n      search: '',         // 검색어 입력값\n      selectedProd: []    // 사용자가 선택한 제품 목록 (체크 상태 유지)\n    }\n  },\n\n  // 계산된 속성 (화면에 반응형으로 자동 갱신됨)\n  computed: {\n    // 검색어를 기준으로 prodList를 필터링한 결과 반환\n    filteredProducts() {\n      return this.prodList.filter(p => p.prd_nm?.includes(this.search));\n    }\n  },\n\n  // 컴포넌트 생성 시 실행 (초기화용)\n  created() {\n    // 부모로부터 전달받은 selected 배열을 복사해서 내부 상태로 저장\n    this.selectedProd = [...this.selected]\n  },\n\n  // 사용자 동작에 따른 메서드 정의\n  methods: {\n    // 제품 선택/해제를 토글 (클릭 시 동작)\n    toggleProdSelection(item) {\n      const index = this.selectedProd.findIndex(p => p.prd_no === item.prd_no)\n      if (index >= 0) {\n        this.selectedProd.splice(index, 1)\n      } else {\n        this.selectedProd.push(item)\n      }\n    },\n\n    // 해당 제품이 현재 선택 상태인지 확인 (UI 표시용)\n    isSelected(item) {\n      return this.selectedProd.some(p => p.prd_no === item.prd_no)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.table-primary {\n  background-color: #cce5ff !important;\n}\n</style>\n","// Pinia의 스토어를 정의하기 위한 함수 import\nimport { defineStore } from 'pinia'\n\n// 'instruction'이라는 이름의 스토어 정의\nexport const useInstructionStore = defineStore('instruction', {\n  // ✅ 상태 정의\n  state: () => ({\n    selectedPlans: [],       // 사용자가 선택한 계획들 (지시용)\n    instructionRows: []      // 지시 입력용 행 리스트 (selectedPlans 기반 자동 생성)\n  }),\n\n  // ✅ 메서드 정의\n  actions: {\n    // 사용자가 선택한 계획들을 상태로 저장하는 함수\n    setSelectedPlans(plans) {\n      this.selectedPlans = plans\n    },\n\n    // selectedPlans를 기반으로 instructionRows를 자동 생성하는 함수\n    generateInstructionRows() {\n      console.log(\"selectedPlans for instruction:\", this.selectedPlans)\n\n      // 선택된 계획 중 수량(qty)이 0보다 큰 것만 지시 대상이 됨\n      this.instructionRows = this.selectedPlans\n      .filter(plan => Number(plan.qty) > 0) // 수량이 있어야 지시 가능\n        .map(plan => {\n          const item = {\n            pdn_pln_no: plan.pdn_pln_no,           // 생산계획 번호\n            pdn_pln_dtl_no: plan.pdn_pln_dtl_no,   // 생산계획 상세 번호\n            prd_no: plan.prd_no,                   // 제품번호\n            prd_nm: plan.prd_nm,                   // 제품명\n            qty: plan.qty,                         // 전체 계획수량\n            instruction_qty: plan.instruction_qty || plan.qty - plan.ord_qty || 0, // 지시 수량 (기본값: 계획수량 - 누적지시시수량)\n            ord_qty: plan.ord_qty || 0,            // 주문 수량\n            rmk: plan.rmk || ''                    // 비고\n          }\n          console.log(\"instructionRow 생성:\", item)\n          return item\n        })\n    },\n\n    // 상태 초기화: 지시모달 닫을 때 주로 사용\n    reset() {\n      this.selectedPlans = []      // 선택된 계획 초기화\n      this.instructionRows = []    // 지시 입력 행 초기화\n    }\n  }\n})\n","<template>\n  <!-- ✅ 배경 클릭 시 닫힘 -->\n  <div class=\"modal fade show d-block\" style=\"background: rgba(0,0,0,0.5); z-index: 1051;\" @click.self=\"$emit('close')\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- ✅ 모달 헤더 -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title mb-0 fw-bold\">계획 지시</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"$emit('close')\"></button>\n        </div>\n\n        <!-- ✅ 모달 바디 -->\n        <div class=\"modal-body\">\n\n          <!-- ✅ 지시 상세 입력 테이블 -->\n          <h6 class=\"fw-bold mb-2\">지시 상세 입력</h6>\n          <table class=\"table table-sm table-bordered text-center\">\n            <thead class=\"table-light\">\n              <tr>\n                <th>제품명</th>\n                <th>계획수량</th>\n                <th>누적지시수량</th>\n                <th>미지시수량</th>\n                <th>지시수량</th>\n                <th>완료수량</th>\n                <th>비고</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(row, index) in instructionStore.instructionRows\" :key=\"row.pdn_pln_dtl_no\">\n                <td>{{ row.prd_nm }}</td>\n                <td>{{ formatNumber(row.qty) }}</td>\n                <td>{{ formatNumber(row.ord_qty) }}</td>\n                <td>{{ formatNumber(row.qty - row.ord_qty - row.instruction_qty || 0) }}</td>\n                <td style=\"width: 100px;\">\n                  <!-- <input type=\"number\" class=\"form-control\" v-model.number=\"row.instruction_qty\" /> -->\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    v-model.number=\"row.instruction_qty\"\n                    min=\"0\"\n                    :max=\"row.qty - row.ord_qty\"\n                    @input=\"handleInput(index)\"\n                  />\n                </td>\n                <td></td>\n                <td>\n                  <input class=\"form-control\" v-model=\"row.rmk\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- ✅ 모달 푸터 -->\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-primary\" @click=\"submit\">지시 등록</button>\n          <button class=\"btn btn-outline-secondary text-dark\" @click=\"$emit('close')\">취소</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useInstructionStore } from '../../stores/instructionStore';\n\nexport default {\n  name: 'InstructionModal',\n  emits: ['submit', 'close'],\n\n  computed: {\n    instructionStore() {\n      return useInstructionStore()\n    },\n    rows() {\n      return this.instructionStore.instructionRows\n    }\n  },\n\n  methods: {\n    // ---------------------여기부터 리뷰 -------------------------\n    handleInput(index) {\n      const row = this.instructionStore.instructionRows[index]\n      if (row.instruction_qty > row.qty) {\n        row.instruction_qty = row.qty\n      } else if (row.instruction_qty < 0 || isNaN(row.instruction_qty)) {\n        row.instruction_qty = 0\n      }\n    },\n    // ---------------------여기부터 까지 -------------------------\n    submit() {\n      const rows = this.instructionStore.instructionRows\n\n      console.log(\"🔥 지시 등록 emit 실행됨!\")\n      console.log(\"전송할 rows:\", rows)\n\n      this.$emit('submit') // 부모에서     처리함\n    },\n          formatNumber(n) {\n    if (n == null || isNaN(n)) return '-'\n    return new Intl.NumberFormat().format(n)\n  },\n\n  }\n}\n</script>\n\n<style scoped>\n.table td,\n.table th {\n  vertical-align: middle;\n}\n</style>\n","<template>\n\n  <div class=\"container mt-4\">\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <h2 class=\"mb-4\">생산 계획 관리</h2>\n\n      <div class=\"d-flex gap-2\">\n        <div class=\"mb-１ d-flex justify-content\">\n          <select v-model=\"statusFilter\" class=\"form-select w-auto\">\n            <option value=\"전체\">전체</option>\n            <option value=\"미지시/부분지시\">미지시/부분지시</option>\n            <option value=\"지시완료\">지시완료</option>\n            <option value=\"생산완료\">생산완료</option>\n          </select>\n        </div>\n        <button class=\"btn btn-warning text-white\" @click=\"resetAll\">초기화</button>\n        <!-- <button class=\"btn btn-light\">재고/지시현황</button> -->\n        <button class=\"btn btn-success text-white\" @click=\"openProductModal\">제품등록</button>\n        <button class=\"btn btn-success text-white\" @click=\"addPlan\">계획등록</button>\n        <button class=\"btn btn-primary\" @click=\"openInstructionModal\">계획지시</button>\n      </div>\n    </div>\n    <table class=\"table table-bordered text-center\" style=\"min-width: 1200px;\">\n      <colgroup>\n        <col style=\"width: 80px\" />\n        <col style=\"width: 160px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 140px\" />\n        <col style=\"width: 140px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 120px\" />\n        <col style=\"width: 120px\" />\n        <col style=\"width: 60px\" />\n      </colgroup>\n\n      <thead class=\"table-light\">\n        <tr>\n          <th>계획번호</th>\n          <th>제품명</th>\n          <th>계획수량</th>\n          <th>누적지시량</th>\n          <th>계획시작일자</th>\n          <th>계획마감일자</th>\n          <th>진행률</th>\n          <th>상태</th>\n          <th>비고</th>\n          <th>삭제</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, index) in planRows\" :key=\"'new-' + index\">\n          <td>신규</td>\n          <td>\n            <div class=\"input-group\">\n              <input v-model=\"row.prd_nm\" class=\"form-control\" placeholder=\"제품 선택\" readonly />\n            </div>\n          </td>\n          <td><input type=\"text\" class=\"form-control text-end\" :value=\"formatNumber(row.qty)\"\n              @input=\"onFormattedQtyInput($event, row)\" placeholder=\"수량\" :min=\"0\"/></td>\n          <td></td>\n          <td><input v-model=\"row.st_dt\" type=\"date\" class=\"form-control\" /></td>\n          <td><input v-model=\"row.end_dt\" type=\"date\" class=\"form-control\" /></td>\n          <td></td>\n          <td></td>\n          <td><input v-model=\"row.rmk\" class=\"form-control\" placeholder=\"비고 입력\" /></td>\n          <td>\n            <button class=\"btn btn-outline-danger btn-sm me-1\" @click=\"removePlanRow(index)\" v-if=\"planRows.length > 0\">\n              - </button>\n          </td>\n        </tr>\n        <!--@click=\"!isFullyInstructed(row) && togglePlanSelection(row)\"  지시완료되면 선택이 안됨 \n            :class=\"[isSelected(row) ? 'table-primary' : '', isFullyInstructed(row) ? 'text-muted' : '']\"\n            클래스를 동적으로 사용 isSelected 선택시 파란색 배경, isFullyInstructed 지시완료시 회색 글씨 \\\n            style 지시 완료면 마우스모양 : 아니면 손가락모양 표현-->\n        <tr v-for=\"row in sortedProdPlanList\" :key=\"row.pdn_pln_no\"\n          @click=\"!isFullyInstructed(row) && togglePlanSelection(row)\"\n          :class=\"[isSelected(row) ? 'table-primary' : '', isFullyInstructed(row) ? 'text-muted' : '']\"\n          :style=\"isFullyInstructed(row) ? 'pointer-events: none; opacity: 0.6;' : 'cursor: pointer;'\">\n          <td>{{ row.pdn_pln_no }}</td>\n          <td>{{ row.prd_nm }}</td>\n          <td>{{ formatNumber(row.qty) }}</td>\n          <td>{{ formatNumber(row.ord_qty) }}</td>\n          <td>{{ dateFormat(row.st_dt, 'yyyy-MM-dd') }}</td>\n          <td>{{ dateFormat(row.end_dt, 'yyyy-MM-dd') }}</td>\n          <td>{{ getProgress(row.qty, row.ord_qty) }}%</td>\n          <td>\n            <!-- :style=\"{ width: getProgress(row.qty, row.ord_qty) + '%' }\" \n             여기가 퍼센트에 따라 진행률 바 체워짐-->\n            <div class=\"progress\" style=\"height: 22px;\">\n              <div class=\"progress-bar\" :class=\"getProgressBarClass(row.qty, row.ord_qty, row.sts)\"\n                :style=\"{ width: getProgress(row.qty, row.ord_qty) + '%' }\" role=\"progressbar\">\n                {{ getStatus(row.qty, row.ord_qty, row.sts) }}\n              </div>\n            </div>\n          </td>\n          <td>{{ row.rmk }}</td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ProductSelectModal v-if=\"showProductModal\" :prodList=\"prodList\" :selected=\"planRows\"\n      @select-product=\"handleSelectedProducts\" @close=\"showProductModal = false\" />\n\n    <InstructionModal v-if=\"showInstructionModal\" @submit=\"submitInstructions\" @close=\"showInstructionModal = false\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport useDateUtils from '@/utils/useDates.js'\nimport ProductSelectModal from '@/views/production/ProductSelectModal.vue'\nimport InstructionModal from '@/views/production/InstructionModal.vue'\nimport { useInstructionStore } from '@/stores/instructionStore'\nimport { useEmpStore } from \"@/stores/empStore.js\"\nimport Swal from 'sweetalert2'\n\nexport default {\n  name: 'ProductionPlan',\n  components: { ProductSelectModal, InstructionModal },\n  data() {\n    return {\n      prodPlanList: [],\n      planRows: [\n        // { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', status: '계획완료' }\n      ],\n      showProductModal: false,\n      showInstructionModal: false,\n      prodList: [],\n      empStore: useEmpStore(),\n      statusFilter: '미지시/부분지시',\n      today: this.getTodayDate()\n    }\n  },\n  computed: {\n    instructionStore() {\n      return useInstructionStore()\n    },\n    employeeName() {\n      return this.empStore.loginInfo.nm || ''\n    },\n    employeeNo() {\n      return this.empStore.loginInfo.emp_no || ''\n    },\n    sortedProdPlanList() {\n      const filtered = this.prodPlanList.filter(row => {\n        const percent = this.getProgress(row.qty, row.ord_qty, row.sts)\n        const status = row.sts\n        if (this.statusFilter === '전체') return true\n        if (this.statusFilter === '미지시/부분지시') return percent < 100\n        if (this.statusFilter === '지시완료') return percent >= 100 && status !== 's3'\n        if (this.statusFilter === '생산완료') return percent >= 100 && status === 's3'\n        return true\n      })\n      return [...filtered].sort((a, b) => {\n        const aDone = Number(a.ord_qty || 0) >= Number(a.qty || 0)\n        const bDone = Number(b.ord_qty || 0) >= Number(b.qty || 0)\n        return aDone - bDone\n      })\n    }\n  },\n  mounted() {\n    this.getProdPlanList()\n  },\n  methods: {\n    async getProdPlanList() {\n      try {\n        const result = await axios.get('/api/prodpln')\n        this.prodPlanList = result.data\n      } catch (err) {\n        console.error('계획 목록 불러오기 실패', err)\n      }\n    },\n    dateFormat(value, format) {\n      return useDateUtils.dateFormat(value, format)\n    },\n    isFullyInstructed(row) {\n      return Number(row.ord_qty || 0) >= Number(row.qty || 0)\n    },\n    isSelected(row) {\n      return this.instructionStore.selectedPlans.some(p => p.pdn_pln_dtl_no === row.pdn_pln_dtl_no)\n    },\n    getProgress(planQty, instQty) {\n      const qty = Number(planQty || 0)\n      const instructed = Number(instQty || 0)\n      if (qty === 0) return 0\n      return Math.round((instructed / qty) * 100)\n    },\n    getStatus(planQty, instQty, sts) {\n      const percent = this.getProgress(planQty, instQty)\n      if (percent === 0) return '계획완료'\n      if (percent < 100) return '부분지시'\n      if (percent >= 100) return sts === 's3' ? '생산완료' : '지시완료'\n      return '오류'\n    },\n    getProgressBarClass(planQty, instQty, sts) {\n      const percent = this.getProgress(planQty, instQty)\n      if (percent === 0) return 'bg-secondary'\n      if (percent < 100) return 'bg-warning text-dark'\n      return sts === 's3' ? 'bg-primary' : 'bg-success'\n    },\n    removePlanRow(index) {\n      this.planRows.splice(index, 1)\n    },\n    resetAll() {\n      if (!confirm('정말 초기화 하시겠습니까? 입력값이 모두 사라집니다.')) return\n      this.planRows = [\n        { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', sts: '계획완료' }\n      ]\n      this.instructionStore.selectedPlans = []\n      this.instructionStore.generateInstructionRows()\n      this.showInstructionModal = false\n    },\n    async addPlan() {\n      try {\n        const submittedList = []\n        for (let row of this.planRows) {\n          if (!row.prd_no || row.qty <= 0 || !row.st_dt || !row.end_dt) {\n            alert('모든 항목을 올바르게 입력하세요.')\n            return\n          }\n          await axios.post('/api/prodpln', {\n            ...row,\n            crt_by: this.empStore.loginInfo.emp_no\n          }, {\n            headers: { 'Content-Type': 'application/json' }\n          })\n          submittedList.push(row)\n        }\n        const itemList = submittedList.map(item => `<li>${item.prd_nm} (${item.qty}개)</li>`).join('')\n        await Swal.fire({\n          title: '✅ 계획 등록 완료!',\n          html: `<ul style=\"text-align:left; padding-left:1.2rem; margin:0;\">${itemList}</ul>`,\n          icon: 'success',\n          confirmButtonText: '확인'\n        })\n        this.planRows = [\n          { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', sts: 's1' }\n        ]\n        this.getProdPlanList()\n      } catch (err) {\n        console.error('등록 실패', err)\n        await Swal.fire('❌ 실패', '계획 등록 실패', 'error')\n      }\n    },\n    openProductModal() {\n      axios.get('/api/prodpln/prdList')\n        .then(res => {\n          this.prodList = res.data\n          this.showProductModal = true\n        })\n        .catch(err => {\n          console.error('제품 목록 불러오기 실패', err)\n        })\n    },\n    handleSelectedProducts(selectedList) {\n      let updatedRows = [...this.planRows]\n      const existingPrdNos = new Set(updatedRows.map(r => r.prd_no))\n      let productIndex = 0\n      for (let i = 0; i < updatedRows.length && productIndex < selectedList.length; i++) {\n        const row = updatedRows[i]\n        const product = selectedList[productIndex]\n        if (!row.prd_no && !existingPrdNos.has(product.prd_no)) {\n          row.prd_no = product.prd_no\n          row.prd_nm = product.prd_nm\n          existingPrdNos.add(product.prd_no)\n          productIndex++\n        }\n      }\n      for (const product of selectedList) {\n        if (!existingPrdNos.has(product.prd_no)) {\n          updatedRows.push({\n            prd_no: product.prd_no,\n            prd_nm: product.prd_nm,\n            qty: '',\n            st_dt: '',\n            end_dt: '',\n            rmk: '',\n            crt_by: this.empStore.loginInfo.emp_no,\n            status: '계획완료'\n          })\n          existingPrdNos.add(product.prd_no)\n        }\n      }\n      this.planRows = updatedRows.filter(row =>\n        row.prd_no && selectedList.some(sel => sel.prd_no === row.prd_no)\n      )\n      this.showProductModal = false\n    },\n    togglePlanSelection(row) {\n      const index = this.instructionStore.selectedPlans.findIndex(p => p.pdn_pln_no === row.pdn_pln_no)\n      if (index >= 0) {\n        this.instructionStore.selectedPlans.splice(index, 1)\n      } else {\n        this.instructionStore.selectedPlans.push(row)\n      }\n    },\n    openInstructionModal() {\n      if (this.instructionStore.selectedPlans.length === 0) {\n        alert(\"지시할 계획을 선택해주세요.\")\n        return\n      }\n      this.instructionStore.selectedPlans = this.instructionStore.selectedPlans.map(plan => ({\n        ...plan,\n        prd_no: plan.prd_no || plan.prd.prd_no || '',\n        pdn_pln_dtl_no: plan.pdn_pln_dtl_no || '',\n      }))\n      this.instructionStore.generateInstructionRows()\n      this.showInstructionModal = true\n    },\n    async submitInstructions() {\n      const rows = this.instructionStore.instructionRows\n      const grouped = {}\n      for (const row of rows) {\n        if (row.instruction_qty <= 0 || row.instruction_qty > row.qty) {\n          alert(`지시수량 오류 (제품: ${row.prd_nm || row.prd_no})`)\n          return\n        }\n        const key = row.pdn_pln_no\n        if (!grouped[key]) grouped[key] = []\n        grouped[key].push({\n          pdn_pln_dtl_no: row.pdn_pln_dtl_no,\n          prd_no: row.prd_no,\n          instruction_qty: row.instruction_qty,\n          ord_sts: 's1',\n          crt_by: this.empStore.loginInfo.emp_no,\n          rmk: row.rmk\n        })\n      }\n      try {\n        for (const [pdn_pln_no, details] of Object.entries(grouped)) {\n          const payload = { pdn_pln_no, details }\n          await axios.post('/api/prodinst', {\n            ...payload,\n            crt_by: this.empStore.loginInfo.emp_no\n          }, {\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n        const itemList = rows.map(item =>\n          `<li>${item.prd_nm} : ${item.instruction_qty}개</li>`).join('')\n        await Swal.fire({\n          title: '🎉 지시 등록 완료!',\n          html: `<ul style=\"text-align:left; padding-left:1.2rem; margin:0;\">${itemList}</ul>`,\n          icon: 'success',\n          confirmButtonText: '확인'\n        })\n        this.showInstructionModal = false\n        this.instructionStore.reset()\n        this.getProdPlanList()\n      } catch (err) {\n        console.error(\"지시 등록 실패\", err.response?.data || err.message)\n        await Swal.fire('❌ 실패', '지시 등록 중 오류 발생', 'error')\n      }\n    },\n    formatNumber(n) {\n      if (n == null || isNaN(n)) return '-'\n      return new Intl.NumberFormat().format(n)\n    },\n    onFormattedQtyInput(event, row) {\n      const raw = event.target.value.replace(/[^\\d]/g, '') // 숫자만 추출\n      const num = Number(raw)\n      row.qty = Math.max(0, num) // 최소 0 보장\n    },\n    // preventMinusInput(event) {\n    //   if (event.key === '-' || event.key === '+' || event.key === 'e') {\n    //     event.preventDefault()\n    //   }\n    // }\n    getTodayDate() {\n    const today = new Date()\n    const yyyy = today.getFullYear()\n    const mm = String(today.getMonth() + 1).padStart(2, '0') // 월은 0부터 시작\n    const dd = String(today.getDate()).padStart(2, '0')\n    return `${yyyy}-${mm}-${dd}` // date input 형식: yyyy-mm-dd\n  }\n  }\n}\n</script>\n\n\n\n\n<style scoped>\nh2 {\n  font-weight: bold;\n  text-align: left;\n}\n\n.table td,\n.table th {\n  vertical-align: middle;\n}\n\n.table-primary {\n  background-color: #cce5ff !important;\n}\n</style>"],"names":["_sfc_main","p","_a","item","index","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_7","_createElementBlock","_cache","_withModifiers","_ctx","_createElementVNode","$event","$data","_hoisted_6","_openBlock","_Fragment","_renderList","$options","_normalizeClass","_toDisplayString","useInstructionStore","defineStore","plans","plan","row","rows","_hoisted_8","_hoisted_9","_vModelText","args","ProductSelectModal","InstructionModal","useEmpStore","percent","status","a","b","aDone","bDone","result","axios","err","value","format","useDateUtils","planQty","instQty","qty","instructed","sts","submittedList","itemList","Swal","res","selectedList","updatedRows","existingPrdNos","r","productIndex","i","product","sel","grouped","key","pdn_pln_no","details","payload","event","raw","num","today","yyyy","mm","dd","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createCommentVNode","_normalizeStyle","_hoisted_14","_createBlock","_component_ProductSelectModal","_component_InstructionModal"],"mappings":"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"}
>>>>>>>> ea6bb99274547af08d1a7bb06d0e67c21cc213ef:server/public/assets/productionPlan-B1QBOxIF.js.map
=======
{"version":3,"file":"productionPlan-B1QBOxIF.js","sources":["../../../client/src/views/production/ProductSelectModal.vue","../../../client/src/stores/instructionStore.js","../../../client/src/views/production/InstructionModal.vue","../../../client/src/views/production/productionPlan.vue"],"sourcesContent":["<template>\n  <!-- ✅ 외부 클릭 시 닫히는 반투명 모달 -->\n  <div class=\"modal fade show d-block\" style=\"background: rgba(0,0,0,0.5); z-index: 1051;\" @click.self=\"$emit('close')\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <!-- ✅ 모달 헤더 -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title mb-0 fw-bold\">제품 선택</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"$emit('close')\"></button>\n        </div>\n\n        <!-- ✅ 모달 바디 -->\n        <div class=\"modal-body\">\n          <!-- ✅ 검색창 및 등록버튼 -->\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\n            <input type=\"text\" class=\"form-control w-25\" placeholder=\"제품명 검색\" v-model=\"search\" />\n            <button class=\"btn btn-outline-secondary text-dark\" @click=\"$emit('select-product', selectedProd)\">\n              제품 등록\n            </button>\n          </div>\n\n          <!-- ✅ 제품 목록 테이블 -->\n          <table class=\"table table-sm table-bordered text-center\" style=\"min-width: 600px;\">\n            <thead class=\"table-light\">\n              <tr>\n                <th>제품번호</th>\n                <th>제품명</th>\n                <th>현재고량</th>\n                <th>생산필요수량</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"item in filteredProducts\"\n                :key=\"item.prd_no\"\n                @click=\"toggleProdSelection(item)\"\n                :class=\"{ 'table-primary': isSelected(item) }\"\n                style=\"cursor: pointer;\"\n              >\n                <td>{{ item.prd_no }}</td>\n                <td>{{ item.prd_nm }}</td>\n                <td>{{ item.현재고량 }}</td>\n                <td>{{ item.생산필요수량 }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  // 부모로부터 전달받는 props (속성값)\n  props: {\n    prodList: Array,   // 전체 제품 목록 (선택 가능한 제품들)\n    selected: Array    // 이미 선택되어 있는 제품 목록 (초기값으로 사용)\n  },\n\n  // 컴포넌트 내부에서 사용하는 데이터 정의\n  data() {\n    return {\n      search: '',         // 검색어 입력값\n      selectedProd: []    // 사용자가 선택한 제품 목록 (체크 상태 유지)\n    }\n  },\n\n  // 계산된 속성 (화면에 반응형으로 자동 갱신됨)\n  computed: {\n    // 검색어를 기준으로 prodList를 필터링한 결과 반환\n    filteredProducts() {\n      return this.prodList.filter(p => p.prd_nm?.includes(this.search));\n    }\n  },\n\n  // 컴포넌트 생성 시 실행 (초기화용)\n  created() {\n    // 부모로부터 전달받은 selected 배열을 복사해서 내부 상태로 저장\n    this.selectedProd = [...this.selected]\n  },\n\n  // 사용자 동작에 따른 메서드 정의\n  methods: {\n    // 제품 선택/해제를 토글 (클릭 시 동작)\n    toggleProdSelection(item) {\n      const index = this.selectedProd.findIndex(p => p.prd_no === item.prd_no)\n      if (index >= 0) {\n        this.selectedProd.splice(index, 1)\n      } else {\n        this.selectedProd.push(item)\n      }\n    },\n\n    // 해당 제품이 현재 선택 상태인지 확인 (UI 표시용)\n    isSelected(item) {\n      return this.selectedProd.some(p => p.prd_no === item.prd_no)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.table-primary {\n  background-color: #cce5ff !important;\n}\n</style>\n","// Pinia의 스토어를 정의하기 위한 함수 import\nimport { defineStore } from 'pinia'\n\n// 'instruction'이라는 이름의 스토어 정의\nexport const useInstructionStore = defineStore('instruction', {\n  // ✅ 상태 정의\n  state: () => ({\n    selectedPlans: [],       // 사용자가 선택한 계획들 (지시용)\n    instructionRows: []      // 지시 입력용 행 리스트 (selectedPlans 기반 자동 생성)\n  }),\n\n  // ✅ 메서드 정의\n  actions: {\n    // 사용자가 선택한 계획들을 상태로 저장하는 함수\n    setSelectedPlans(plans) {\n      this.selectedPlans = plans\n    },\n\n    // selectedPlans를 기반으로 instructionRows를 자동 생성하는 함수\n    generateInstructionRows() {\n      console.log(\"selectedPlans for instruction:\", this.selectedPlans)\n\n      // 선택된 계획 중 수량(qty)이 0보다 큰 것만 지시 대상이 됨\n      this.instructionRows = this.selectedPlans\n      .filter(plan => Number(plan.qty) > 0) // 수량이 있어야 지시 가능\n        .map(plan => {\n          const item = {\n            pdn_pln_no: plan.pdn_pln_no,           // 생산계획 번호\n            pdn_pln_dtl_no: plan.pdn_pln_dtl_no,   // 생산계획 상세 번호\n            prd_no: plan.prd_no,                   // 제품번호\n            prd_nm: plan.prd_nm,                   // 제품명\n            qty: plan.qty,                         // 전체 계획수량\n            instruction_qty: plan.instruction_qty || plan.qty - plan.ord_qty || 0, // 지시 수량 (기본값: 계획수량 - 누적지시시수량)\n            ord_qty: plan.ord_qty || 0,            // 주문 수량\n            rmk: plan.rmk || ''                    // 비고\n          }\n          console.log(\"instructionRow 생성:\", item)\n          return item\n        })\n    },\n\n    // 상태 초기화: 지시모달 닫을 때 주로 사용\n    reset() {\n      this.selectedPlans = []      // 선택된 계획 초기화\n      this.instructionRows = []    // 지시 입력 행 초기화\n    }\n  }\n})\n","<template>\n  <!-- ✅ 배경 클릭 시 닫힘 -->\n  <div class=\"modal fade show d-block\" style=\"background: rgba(0,0,0,0.5); z-index: 1051;\" @click.self=\"$emit('close')\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- ✅ 모달 헤더 -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title mb-0 fw-bold\">계획 지시</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"$emit('close')\"></button>\n        </div>\n\n        <!-- ✅ 모달 바디 -->\n        <div class=\"modal-body\">\n\n          <!-- ✅ 지시 상세 입력 테이블 -->\n          <h6 class=\"fw-bold mb-2\">지시 상세 입력</h6>\n          <table class=\"table table-sm table-bordered text-center\">\n            <thead class=\"table-light\">\n              <tr>\n                <th>제품명</th>\n                <th>계획수량</th>\n                <th>누적지시수량</th>\n                <th>미지시수량</th>\n                <th>지시수량</th>\n                <th>완료수량</th>\n                <th>비고</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(row, index) in instructionStore.instructionRows\" :key=\"row.pdn_pln_dtl_no\">\n                <td>{{ row.prd_nm }}</td>\n                <td>{{ formatNumber(row.qty) }}</td>\n                <td>{{ formatNumber(row.ord_qty) }}</td>\n                <td>{{ formatNumber(row.qty - row.ord_qty - row.instruction_qty || 0) }}</td>\n                <td style=\"width: 100px;\">\n                  <!-- <input type=\"number\" class=\"form-control\" v-model.number=\"row.instruction_qty\" /> -->\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    v-model.number=\"row.instruction_qty\"\n                    min=\"0\"\n                    :max=\"row.qty - row.ord_qty\"\n                    @input=\"handleInput(index)\"\n                  />\n                </td>\n                <td></td>\n                <td>\n                  <input class=\"form-control\" v-model=\"row.rmk\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- ✅ 모달 푸터 -->\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-primary\" @click=\"submit\">지시 등록</button>\n          <button class=\"btn btn-outline-secondary text-dark\" @click=\"$emit('close')\">취소</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useInstructionStore } from '../../stores/instructionStore';\n\nexport default {\n  name: 'InstructionModal',\n  emits: ['submit', 'close'],\n\n  computed: {\n    instructionStore() {\n      return useInstructionStore()\n    },\n    rows() {\n      return this.instructionStore.instructionRows\n    }\n  },\n\n  methods: {\n    // ---------------------여기부터 리뷰 -------------------------\n    handleInput(index) {\n      const row = this.instructionStore.instructionRows[index]\n      if (row.instruction_qty > row.qty) {\n        row.instruction_qty = row.qty\n      } else if (row.instruction_qty < 0 || isNaN(row.instruction_qty)) {\n        row.instruction_qty = 0\n      }\n    },\n    // ---------------------여기부터 까지 -------------------------\n    submit() {\n      const rows = this.instructionStore.instructionRows\n\n      console.log(\"🔥 지시 등록 emit 실행됨!\")\n      console.log(\"전송할 rows:\", rows)\n\n      this.$emit('submit') // 부모에서     처리함\n    },\n          formatNumber(n) {\n    if (n == null || isNaN(n)) return '-'\n    return new Intl.NumberFormat().format(n)\n  },\n\n  }\n}\n</script>\n\n<style scoped>\n.table td,\n.table th {\n  vertical-align: middle;\n}\n</style>\n","<template>\n\n  <div class=\"container mt-4\">\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <h2 class=\"mb-4\">생산 계획 관리</h2>\n\n      <div class=\"d-flex gap-2\">\n        <div class=\"mb-１ d-flex justify-content\">\n          <select v-model=\"statusFilter\" class=\"form-select w-auto\">\n            <option value=\"전체\">전체</option>\n            <option value=\"미지시/부분지시\">미지시/부분지시</option>\n            <option value=\"지시완료\">지시완료</option>\n            <option value=\"생산완료\">생산완료</option>\n          </select>\n        </div>\n        <button class=\"btn btn-warning text-white\" @click=\"resetAll\">초기화</button>\n        <!-- <button class=\"btn btn-light\">재고/지시현황</button> -->\n        <button class=\"btn btn-success text-white\" @click=\"openProductModal\">제품등록</button>\n        <button class=\"btn btn-success text-white\" @click=\"addPlan\">계획등록</button>\n        <button class=\"btn btn-primary\" @click=\"openInstructionModal\">계획지시</button>\n      </div>\n    </div>\n    <table class=\"table table-bordered text-center\" style=\"min-width: 1200px;\">\n      <colgroup>\n        <col style=\"width: 80px\" />\n        <col style=\"width: 160px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 140px\" />\n        <col style=\"width: 140px\" />\n        <col style=\"width: 100px\" />\n        <col style=\"width: 120px\" />\n        <col style=\"width: 120px\" />\n        <col style=\"width: 60px\" />\n      </colgroup>\n\n      <thead class=\"table-light\">\n        <tr>\n          <th>계획번호</th>\n          <th>제품명</th>\n          <th>계획수량</th>\n          <th>누적지시량</th>\n          <th>계획시작일자</th>\n          <th>계획마감일자</th>\n          <th>진행률</th>\n          <th>상태</th>\n          <th>비고</th>\n          <th>삭제</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, index) in planRows\" :key=\"'new-' + index\">\n          <td>신규</td>\n          <td>\n            <div class=\"input-group\">\n              <input v-model=\"row.prd_nm\" class=\"form-control\" placeholder=\"제품 선택\" readonly />\n            </div>\n          </td>\n          <td><input type=\"text\" class=\"form-control text-end\" :value=\"formatNumber(row.qty)\"\n              @input=\"onFormattedQtyInput($event, row)\" placeholder=\"수량\" :min=\"0\"/></td>\n          <td></td>\n          <td><input v-model=\"row.st_dt\" type=\"date\" class=\"form-control\" /></td>\n          <td><input v-model=\"row.end_dt\" type=\"date\" class=\"form-control\" /></td>\n          <td></td>\n          <td></td>\n          <td><input v-model=\"row.rmk\" class=\"form-control\" placeholder=\"비고 입력\" /></td>\n          <td>\n            <button class=\"btn btn-outline-danger btn-sm me-1\" @click=\"removePlanRow(index)\" v-if=\"planRows.length > 0\">\n              - </button>\n          </td>\n        </tr>\n        <!--@click=\"!isFullyInstructed(row) && togglePlanSelection(row)\"  지시완료되면 선택이 안됨 \n            :class=\"[isSelected(row) ? 'table-primary' : '', isFullyInstructed(row) ? 'text-muted' : '']\"\n            클래스를 동적으로 사용 isSelected 선택시 파란색 배경, isFullyInstructed 지시완료시 회색 글씨 \\\n            style 지시 완료면 마우스모양 : 아니면 손가락모양 표현-->\n        <tr v-for=\"row in sortedProdPlanList\" :key=\"row.pdn_pln_no\"\n          @click=\"!isFullyInstructed(row) && togglePlanSelection(row)\"\n          :class=\"[isSelected(row) ? 'table-primary' : '', isFullyInstructed(row) ? 'text-muted' : '']\"\n          :style=\"isFullyInstructed(row) ? 'pointer-events: none; opacity: 0.6;' : 'cursor: pointer;'\">\n          <td>{{ row.pdn_pln_no }}</td>\n          <td>{{ row.prd_nm }}</td>\n          <td>{{ formatNumber(row.qty) }}</td>\n          <td>{{ formatNumber(row.ord_qty) }}</td>\n          <td>{{ dateFormat(row.st_dt, 'yyyy-MM-dd') }}</td>\n          <td>{{ dateFormat(row.end_dt, 'yyyy-MM-dd') }}</td>\n          <td>{{ getProgress(row.qty, row.ord_qty) }}%</td>\n          <td>\n            <!-- :style=\"{ width: getProgress(row.qty, row.ord_qty) + '%' }\" \n             여기가 퍼센트에 따라 진행률 바 체워짐-->\n            <div class=\"progress\" style=\"height: 22px;\">\n              <div class=\"progress-bar\" :class=\"getProgressBarClass(row.qty, row.ord_qty, row.sts)\"\n                :style=\"{ width: getProgress(row.qty, row.ord_qty) + '%' }\" role=\"progressbar\">\n                {{ getStatus(row.qty, row.ord_qty, row.sts) }}\n              </div>\n            </div>\n          </td>\n          <td>{{ row.rmk }}</td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ProductSelectModal v-if=\"showProductModal\" :prodList=\"prodList\" :selected=\"planRows\"\n      @select-product=\"handleSelectedProducts\" @close=\"showProductModal = false\" />\n\n    <InstructionModal v-if=\"showInstructionModal\" @submit=\"submitInstructions\" @close=\"showInstructionModal = false\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport useDateUtils from '@/utils/useDates.js'\nimport ProductSelectModal from '@/views/production/ProductSelectModal.vue'\nimport InstructionModal from '@/views/production/InstructionModal.vue'\nimport { useInstructionStore } from '@/stores/instructionStore'\nimport { useEmpStore } from \"@/stores/empStore.js\"\nimport Swal from 'sweetalert2'\n\nexport default {\n  name: 'ProductionPlan',\n  components: { ProductSelectModal, InstructionModal },\n  data() {\n    return {\n      prodPlanList: [],\n      planRows: [\n        // { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', status: '계획완료' }\n      ],\n      showProductModal: false,\n      showInstructionModal: false,\n      prodList: [],\n      empStore: useEmpStore(),\n      statusFilter: '미지시/부분지시',\n      today: this.getTodayDate()\n    }\n  },\n  computed: {\n    instructionStore() {\n      return useInstructionStore()\n    },\n    employeeName() {\n      return this.empStore.loginInfo.nm || ''\n    },\n    employeeNo() {\n      return this.empStore.loginInfo.emp_no || ''\n    },\n    sortedProdPlanList() {\n      const filtered = this.prodPlanList.filter(row => {\n        const percent = this.getProgress(row.qty, row.ord_qty, row.sts)\n        const status = row.sts\n        if (this.statusFilter === '전체') return true\n        if (this.statusFilter === '미지시/부분지시') return percent < 100\n        if (this.statusFilter === '지시완료') return percent >= 100 && status !== 's3'\n        if (this.statusFilter === '생산완료') return percent >= 100 && status === 's3'\n        return true\n      })\n      return [...filtered].sort((a, b) => {\n        const aDone = Number(a.ord_qty || 0) >= Number(a.qty || 0)\n        const bDone = Number(b.ord_qty || 0) >= Number(b.qty || 0)\n        return aDone - bDone\n      })\n    }\n  },\n  mounted() {\n    this.getProdPlanList()\n  },\n  methods: {\n    async getProdPlanList() {\n      try {\n        const result = await axios.get('/api/prodpln')\n        this.prodPlanList = result.data\n      } catch (err) {\n        console.error('계획 목록 불러오기 실패', err)\n      }\n    },\n    dateFormat(value, format) {\n      return useDateUtils.dateFormat(value, format)\n    },\n    isFullyInstructed(row) {\n      return Number(row.ord_qty || 0) >= Number(row.qty || 0)\n    },\n    isSelected(row) {\n      return this.instructionStore.selectedPlans.some(p => p.pdn_pln_dtl_no === row.pdn_pln_dtl_no)\n    },\n    getProgress(planQty, instQty) {\n      const qty = Number(planQty || 0)\n      const instructed = Number(instQty || 0)\n      if (qty === 0) return 0\n      return Math.round((instructed / qty) * 100)\n    },\n    getStatus(planQty, instQty, sts) {\n      const percent = this.getProgress(planQty, instQty)\n      if (percent === 0) return '계획완료'\n      if (percent < 100) return '부분지시'\n      if (percent >= 100) return sts === 's3' ? '생산완료' : '지시완료'\n      return '오류'\n    },\n    getProgressBarClass(planQty, instQty, sts) {\n      const percent = this.getProgress(planQty, instQty)\n      if (percent === 0) return 'bg-secondary'\n      if (percent < 100) return 'bg-warning text-dark'\n      return sts === 's3' ? 'bg-primary' : 'bg-success'\n    },\n    removePlanRow(index) {\n      this.planRows.splice(index, 1)\n    },\n    resetAll() {\n      if (!confirm('정말 초기화 하시겠습니까? 입력값이 모두 사라집니다.')) return\n      this.planRows = [\n        { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', sts: '계획완료' }\n      ]\n      this.instructionStore.selectedPlans = []\n      this.instructionStore.generateInstructionRows()\n      this.showInstructionModal = false\n    },\n    async addPlan() {\n      try {\n        const submittedList = []\n        for (let row of this.planRows) {\n          if (!row.prd_no || row.qty <= 0 || !row.st_dt || !row.end_dt) {\n            alert('모든 항목을 올바르게 입력하세요.')\n            return\n          }\n          await axios.post('/api/prodpln', {\n            ...row,\n            crt_by: this.empStore.loginInfo.emp_no\n          }, {\n            headers: { 'Content-Type': 'application/json' }\n          })\n          submittedList.push(row)\n        }\n        const itemList = submittedList.map(item => `<li>${item.prd_nm} (${item.qty}개)</li>`).join('')\n        await Swal.fire({\n          title: '✅ 계획 등록 완료!',\n          html: `<ul style=\"text-align:left; padding-left:1.2rem; margin:0;\">${itemList}</ul>`,\n          icon: 'success',\n          confirmButtonText: '확인'\n        })\n        this.planRows = [\n          { prd_no: '', prd_nm: '', qty: '', st_dt: '', end_dt: '', rmk: '', sts: 's1' }\n        ]\n        this.getProdPlanList()\n      } catch (err) {\n        console.error('등록 실패', err)\n        await Swal.fire('❌ 실패', '계획 등록 실패', 'error')\n      }\n    },\n    openProductModal() {\n      axios.get('/api/prodpln/prdList')\n        .then(res => {\n          this.prodList = res.data\n          this.showProductModal = true\n        })\n        .catch(err => {\n          console.error('제품 목록 불러오기 실패', err)\n        })\n    },\n    handleSelectedProducts(selectedList) {\n      let updatedRows = [...this.planRows]\n      const existingPrdNos = new Set(updatedRows.map(r => r.prd_no))\n      let productIndex = 0\n      for (let i = 0; i < updatedRows.length && productIndex < selectedList.length; i++) {\n        const row = updatedRows[i]\n        const product = selectedList[productIndex]\n        if (!row.prd_no && !existingPrdNos.has(product.prd_no)) {\n          row.prd_no = product.prd_no\n          row.prd_nm = product.prd_nm\n          existingPrdNos.add(product.prd_no)\n          productIndex++\n        }\n      }\n      for (const product of selectedList) {\n        if (!existingPrdNos.has(product.prd_no)) {\n          updatedRows.push({\n            prd_no: product.prd_no,\n            prd_nm: product.prd_nm,\n            qty: '',\n            st_dt: '',\n            end_dt: '',\n            rmk: '',\n            crt_by: this.empStore.loginInfo.emp_no,\n            status: '계획완료'\n          })\n          existingPrdNos.add(product.prd_no)\n        }\n      }\n      this.planRows = updatedRows.filter(row =>\n        row.prd_no && selectedList.some(sel => sel.prd_no === row.prd_no)\n      )\n      this.showProductModal = false\n    },\n    togglePlanSelection(row) {\n      const index = this.instructionStore.selectedPlans.findIndex(p => p.pdn_pln_no === row.pdn_pln_no)\n      if (index >= 0) {\n        this.instructionStore.selectedPlans.splice(index, 1)\n      } else {\n        this.instructionStore.selectedPlans.push(row)\n      }\n    },\n    openInstructionModal() {\n      if (this.instructionStore.selectedPlans.length === 0) {\n        alert(\"지시할 계획을 선택해주세요.\")\n        return\n      }\n      this.instructionStore.selectedPlans = this.instructionStore.selectedPlans.map(plan => ({\n        ...plan,\n        prd_no: plan.prd_no || plan.prd.prd_no || '',\n        pdn_pln_dtl_no: plan.pdn_pln_dtl_no || '',\n      }))\n      this.instructionStore.generateInstructionRows()\n      this.showInstructionModal = true\n    },\n    async submitInstructions() {\n      const rows = this.instructionStore.instructionRows\n      const grouped = {}\n      for (const row of rows) {\n        if (row.instruction_qty <= 0 || row.instruction_qty > row.qty) {\n          alert(`지시수량 오류 (제품: ${row.prd_nm || row.prd_no})`)\n          return\n        }\n        const key = row.pdn_pln_no\n        if (!grouped[key]) grouped[key] = []\n        grouped[key].push({\n          pdn_pln_dtl_no: row.pdn_pln_dtl_no,\n          prd_no: row.prd_no,\n          instruction_qty: row.instruction_qty,\n          ord_sts: 's1',\n          crt_by: this.empStore.loginInfo.emp_no,\n          rmk: row.rmk\n        })\n      }\n      try {\n        for (const [pdn_pln_no, details] of Object.entries(grouped)) {\n          const payload = { pdn_pln_no, details }\n          await axios.post('/api/prodinst', {\n            ...payload,\n            crt_by: this.empStore.loginInfo.emp_no\n          }, {\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n        const itemList = rows.map(item =>\n          `<li>${item.prd_nm} : ${item.instruction_qty}개</li>`).join('')\n        await Swal.fire({\n          title: '🎉 지시 등록 완료!',\n          html: `<ul style=\"text-align:left; padding-left:1.2rem; margin:0;\">${itemList}</ul>`,\n          icon: 'success',\n          confirmButtonText: '확인'\n        })\n        this.showInstructionModal = false\n        this.instructionStore.reset()\n        this.getProdPlanList()\n      } catch (err) {\n        console.error(\"지시 등록 실패\", err.response?.data || err.message)\n        await Swal.fire('❌ 실패', '지시 등록 중 오류 발생', 'error')\n      }\n    },\n    formatNumber(n) {\n      if (n == null || isNaN(n)) return '-'\n      return new Intl.NumberFormat().format(n)\n    },\n    onFormattedQtyInput(event, row) {\n      const raw = event.target.value.replace(/[^\\d]/g, '') // 숫자만 추출\n      const num = Number(raw)\n      row.qty = Math.max(0, num) // 최소 0 보장\n    },\n    // preventMinusInput(event) {\n    //   if (event.key === '-' || event.key === '+' || event.key === 'e') {\n    //     event.preventDefault()\n    //   }\n    // }\n    getTodayDate() {\n    const today = new Date()\n    const yyyy = today.getFullYear()\n    const mm = String(today.getMonth() + 1).padStart(2, '0') // 월은 0부터 시작\n    const dd = String(today.getDate()).padStart(2, '0')\n    return `${yyyy}-${mm}-${dd}` // date input 형식: yyyy-mm-dd\n  }\n  }\n}\n</script>\n\n\n\n\n<style scoped>\nh2 {\n  font-weight: bold;\n  text-align: left;\n}\n\n.table td,\n.table th {\n  vertical-align: middle;\n}\n\n.table-primary {\n  background-color: #cce5ff !important;\n}\n</style>"],"names":["_sfc_main","p","_a","item","index","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_7","_createElementBlock","_cache","_withModifiers","_ctx","_createElementVNode","$event","$data","_hoisted_6","_openBlock","_Fragment","_renderList","$options","_normalizeClass","_toDisplayString","useInstructionStore","defineStore","plans","plan","row","rows","_hoisted_8","_hoisted_9","_vModelText","args","ProductSelectModal","InstructionModal","useEmpStore","percent","status","a","b","aDone","bDone","result","axios","err","value","format","useDateUtils","planQty","instQty","qty","instructed","sts","submittedList","itemList","Swal","res","selectedList","updatedRows","existingPrdNos","r","productIndex","i","product","sel","grouped","key","pdn_pln_no","details","payload","event","raw","num","today","yyyy","mm","dd","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createCommentVNode","_normalizeStyle","_hoisted_14","_createBlock","_component_ProductSelectModal","_component_InstructionModal"],"mappings":"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"}
>>>>>>> 6a9aee91f1b003d56d62a2dc3d9a1abb2695e08b
>>>>>>> origin/Eunae
