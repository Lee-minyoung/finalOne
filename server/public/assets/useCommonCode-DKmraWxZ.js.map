{"version":3,"file":"useCommonCode-DKmraWxZ.js","sources":["../../../client/src/utils/useCommonCode.js"],"sourcesContent":["// 특정 서비스에 종속되지 않는 기능의 경우 별도 파일로 관리\n\n// 여부 공통코드 처리\nconst CommonCodeFormat = function (value) {\n  // value : f1, f2\n  //  출력 : f1 == 여, f2 == 부\n  // value가 null인 경우엔 '' 공백을 값으로 가지도록 함\n\n  let result = '';\n  if (value == 'f1') {\n    result = '여';\n  } else if (value == 'f2') {\n    result = '부' \n  } \n  return result;\n};\n\n// 라인상태 공통코드 처리\nconst lineStatusFormat = function (value) {\n  // value : l1, l2, l3, l4, l5\n  //  출력 : l1 == 비가동, l2 == 대기중, l3 == 사용중, l4 == 수리중, l5 == 점검중\n  // value가 null인 경우엔 '' 공백을 값으로 가지도록 함\n\n  let result = '';\n  if (value == 'l1') {\n    result = '비가동';\n  } else if (value == 'l2') {\n    result = '대기중' \n  } else if (value == 'l3') {\n    result = '공정중' \n  } else if (value == 'l4') {\n    result = '공정완료' \n  } else if (value == 'l5') {\n    result = '수리중' \n  } else if (value == 'l6') {\n    result = '점검중' \n  } \n  return result;\n}\n\n// 재직상태 공통코드 처리\nconst empStatusFormat = function (value) {\n  // value : a1, a2, a3\n  //  출력 : a1 == 재직, a2 == 휴직 a3 == 퇴직\n  // value가 null인 경우엔 '' 공백을 값으로 가지도록 함\n\n  let result = '';\n  if (value == 'a1') {\n    result = '재직';\n  } else if (value == 'a2') {\n    result = '휴직' \n  } else if (value == 'a3') {\n    result = '퇴직' \n  } \n  return result;\n}\n\n// 설비상태 공통코드 처리\nconst eqpStatusFormat = function (value) {\n  // value : h1, h2, h3\n  //  출력 : h1 == 정상, h2 == 수리중, h3 == 점검중\n  // value가 null인 경우엔 '' 공백을 값으로 가지도록 함\n\n  let result = '';\n  if (value == 'h1') {\n    result = '정상';\n  } else if (value == 'h2') {\n    result = '수리중' \n  } else if (value == 'h3') {\n    result = '점검중' \n  } else if (value == 'h4') {\n    result = '대기' \n  } else if (value == 'h5') {\n    result = '공정중' \n  } else if (value == 'h6') {\n    result = '완료' \n  } \n  return result;\n}\n\n// 숫자 천단위 콤마 처리\nconst numberWithCommas = function (value) {\n  if (value === null || value === undefined) return ''; // null 또는 undefined 처리\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); // 정규식을 사용하여 천 단위로 콤마 추가\n};\n\n// 자재 유형 공통코드 처리\nconst matTypeFormat = function (value) {\n  // value : b1, b2, b3\n  //  출력 : b1 == 원재료, b2 == 부재료, b3 == 소모품\n  // value가 null인 경우엔 '' 공백을 값으로 가지도록 함\n\n  let result = '';\n  if (value == 'b1') {\n    result = '원재료';\n  } else if (value == 'b2') {\n    result = '부재료';\n  } else if (value == 'b3') {\n    result = '소모품';\n  }\n  return result;\n};\n\n// 사업장 유형 공통코드 처리\nconst officeTypeFormat = function (value) {\n  // value : b1, b2, b3, b4\n  //  출력 : b1 == 판매처, b2 == 구매처, b3 == 혼합, b4 == 외주처\n  // value가 null인 경우엔 '' 공백을 값으로 가지도록 함\n\n  let result = '';\n  if (value == 'b1') {\n    result = '판매처';\n  } else if (value == 'b2') {\n    result = '구매처';\n  } else if (value == 'b3') {\n    result = '혼합';\n  } else if (value == 'b4') {\n    result = '외주처';\n  }\n  return result;\n};\n\n// 사업장 상태 공통코드 처리\nconst officeStatusFormat = function (value) {\n  // value : d1, d2, d3\n  //  출력 : d1 == 정상, d2 == 휴업, d3 == 폐업\n  // value가 null인 경우엔 '' 공백을 값으로 가지도록 함\n\n  let result = '';\n  if (value == 'd1') {\n    result = '정상';\n  } else if (value == 'd2') {\n    result = '휴업';\n  } else if (value == 'd3') {\n    result = '폐업';\n  }\n  return result;\n};\n\n// 제품 유형 공통코드 처리\nconst prdTypeFormat = function (value) {\n  // value : j4, j5\n  //  출력 : j4 == 반제품, j5 == 제품\n  // value가 null인 경우엔 '' 공백을 값으로 가지도록 함\n\n  let result = '';\n  if (value == 'j4') {\n    result = '반제품';\n  } else if (value == 'j5') {\n    result = '제품';\n  }\n  return result;\n};\n\nexport default {\n  CommonCodeFormat,\n  lineStatusFormat,\n  empStatusFormat,\n  eqpStatusFormat,\n  numberWithCommas,\n  matTypeFormat,\n  officeTypeFormat,\n  officeStatusFormat,\n  prdTypeFormat,\n};\n"],"names":["CommonCodeFormat","value","result","lineStatusFormat","empStatusFormat","eqpStatusFormat","numberWithCommas","matTypeFormat","officeTypeFormat","officeStatusFormat","prdTypeFormat","dataFormat"],"mappings":"AAGA,MAAMA,EAAmB,SAAUC,EAAO,CAKxC,IAAIC,EAAS,GACb,OAAID,GAAS,KACXC,EAAS,IACAD,GAAS,OAClBC,EAAS,KAEJA,CACT,EAGMC,EAAmB,SAAUF,EAAO,CAKxC,IAAIC,EAAS,GACb,OAAID,GAAS,KACXC,EAAS,MACAD,GAAS,KAClBC,EAAS,MACAD,GAAS,KAClBC,EAAS,MACAD,GAAS,KAClBC,EAAS,OACAD,GAAS,KAClBC,EAAS,MACAD,GAAS,OAClBC,EAAS,OAEJA,CACT,EAGME,EAAkB,SAAUH,EAAO,CAKvC,IAAIC,EAAS,GACb,OAAID,GAAS,KACXC,EAAS,KACAD,GAAS,KAClBC,EAAS,KACAD,GAAS,OAClBC,EAAS,MAEJA,CACT,EAGMG,EAAkB,SAAUJ,EAAO,CAKvC,IAAIC,EAAS,GACb,OAAID,GAAS,KACXC,EAAS,KACAD,GAAS,KAClBC,EAAS,MACAD,GAAS,KAClBC,EAAS,MACAD,GAAS,KAClBC,EAAS,KACAD,GAAS,KAClBC,EAAS,MACAD,GAAS,OAClBC,EAAS,MAEJA,CACT,EAGMI,EAAmB,SAAUL,EAAO,CACxC,OAAIA,GAAU,KAAoC,GAC3CA,EAAM,SAAU,EAAC,QAAQ,wBAAyB,GAAG,CAC9D,EAGMM,EAAgB,SAAUN,EAAO,CAKrC,IAAIC,EAAS,GACb,OAAID,GAAS,KACXC,EAAS,MACAD,GAAS,KAClBC,EAAS,MACAD,GAAS,OAClBC,EAAS,OAEJA,CACT,EAGMM,EAAmB,SAAUP,EAAO,CAKxC,IAAIC,EAAS,GACb,OAAID,GAAS,KACXC,EAAS,MACAD,GAAS,KAClBC,EAAS,MACAD,GAAS,KAClBC,EAAS,KACAD,GAAS,OAClBC,EAAS,OAEJA,CACT,EAGMO,EAAqB,SAAUR,EAAO,CAK1C,IAAIC,EAAS,GACb,OAAID,GAAS,KACXC,EAAS,KACAD,GAAS,KAClBC,EAAS,KACAD,GAAS,OAClBC,EAAS,MAEJA,CACT,EAGMQ,EAAgB,SAAUT,EAAO,CAKrC,IAAIC,EAAS,GACb,OAAID,GAAS,KACXC,EAAS,MACAD,GAAS,OAClBC,EAAS,MAEJA,CACT,EAEeS,EAAA,CACb,iBAAAX,EACA,iBAAAG,EACA,gBAAAC,EACA,gBAAAC,EACA,iBAAAC,EACA,cAAAC,EACA,iBAAAC,EACA,mBAAAC,EACA,cAAAC,CACF"}