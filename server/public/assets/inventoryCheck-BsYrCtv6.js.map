{"version":3,"file":"inventoryCheck-BsYrCtv6.js","sources":["../../../client/src/views/inventory/inventoryCheck.vue"],"sourcesContent":["<template>\n  <h3>자재현황파악</h3>\n  <div class=\"table-responsive\" style=\"max-width: 1150px;\">\n    <table class=\"table table-bordered text-center\">\n      <colgroup>\n        <col style=\"width: 200px\" />\n        <col style=\"width: 200px\" />\n        <col style=\"width: 200px\" />\n        <col style=\"width: 200px\" />\n        <col style=\"width: 100px\" />\n      </colgroup>\n      <tbody>\n        <template v-for=\"(items, reqNo) in groupedInventory\" :key=\"reqNo\">\n          <!-- 상단 요약 (클릭해서 토글) -->\n          <tr class=\"table-primary\" style=\"cursor: pointer;\" @click=\"toggleAccordion(reqNo)\">\n            <td colspan=\"6\" class=\"text-start\">\n              <span class=\"d-flex justify-content-between align-items-center w-100\">\n                <span>\n                  <b>{{ isExpanded(reqNo) ? '▼' : '▶' }}</b>\n                  출고요청번호: <b>{{ reqNo }}</b> (자재 {{ items.length }}건) | 지시번호 : <b>{{ items[0].생산지시번호 }}</b> | 제품명 : <b>{{ items[0].제품명 }}</b>\n                </span>\n                <button class=\"btn btn-success rounded-pill px-2 py-1 me-2\" @click.stop=\"checkMat(reqNo)\" type=\"button\">\n                  자재출고\n                </button>\n              </span>\n            </td>\n          </tr>\n          <!-- 아코디언 하위 내용 -->\n          <template v-if=\"isExpanded(reqNo)\">\n            <!-- 각 섹션의 헤더 -->\n            <tr class=\"table-light\">\n              <th>자재명</th>\n              <th>총필요량</th>\n              <th>현재고</th>\n              <th>부족수량</th>\n              <th>자재출고</th>\n            </tr>\n            <tr v-for=\"item in items\" :key=\"item.mat_req_no\">\n              <td class=\"align-middle\">{{ item['자재명'] }}</td>\n\n              <td class=\"align-middle\" v-if=\"item['단위'] == 'g'\">{{ formatNumber(item['총필요량'] / 1000) }}kg</td>\n              <td class=\"align-middle\" v-else-if=\"item['단위'] == 'EA'\">{{ formatNumber(item['총필요량']) }}EA</td>\n              <td class=\"align-middle\" v-else-if=\"item['단위'] == 'ml'\">{{ formatNumber(item['총필요량'] / 1000) }}L</td>\n              <td class=\"align-middle\" v-else>{{ formatNumber(item['총필요량']) }}</td>\n\n              <td class=\"align-middle\" v-if=\"item['단위'] == 'g'\">{{ formatNumber(item['현재재고'] / 1000) }}kg</td>\n              <td class=\"align-middle\" v-else-if=\"item['단위'] == 'EA'\">{{ formatNumber(item['현재재고']) }}EA</td>\n              <td class=\"align-middle\" v-else-if=\"item['단위'] == 'ml'\">{{ formatNumber(item['현재재고'] / 1000) }}L</td>\n              <td class=\"align-middle\" v-else>{{ formatNumber(item['현재재고']) }}</td>\n\n              <td class=\"align-middle\" v-if=\"item['단위'] == 'g'\">{{ formatNumber(item['부족수량'] > 0 ? item['부족수량'] / 1000 : 0) }}kg</td>\n              <td class=\"align-middle\" v-else-if=\"item['단위'] == 'EA'\">{{ formatNumber(item['부족수량'] > 0 ? item['부족수량'] : 0) }}EA</td>\n              <td class=\"align-middle\" v-else-if=\"item['단위'] == 'ml'\">{{ formatNumber(item['부족수량'] > 0 ? item['부족수량'] / 1000 : 0) }}L</td>\n              <td class=\"align-middle\" v-else>{{ formatNumber(item['부족수량'] > 0 ? item['부족수량'] : 0) }}</td>\n\n              <td class=\"align-middle\">\n                <template v-if=\"item['부족수량'] <= 0\">\n                  <button class=\"btn btn-primary rounded-pill px-2 py-1\" disabled>출고완료</button>\n                </template>\n                <template v-else-if=\"item['자재처리결과'] == 'c3' || reqClickedList.includes(item['계획ID'] + item['자재명'])\">\n                  <button class=\"btn btn-info rounded-pill px-2 py-1\" disabled>요청완료</button>\n                </template>\n                <template v-else-if=\"item['부족수량'] > 0 && !(item['자재처리결과'] == 'c3') && !reqClickedList.includes(item['계획ID'] + item['자재명'])\">\n                  <button class=\"btn btn-success rounded-pill px-2 py-1\" @click=\"addPurOrd(item)\" type=\"button\">자재요청</button>\n                </template>\n              </td>\n            </tr>\n          </template>\n        </template>\n      </tbody>\n    </table>\n  </div>\n  <h3>자재구매계획 </h3>\n  <table class=\"table table-bordered text-center\" style=\"max-width: 1150px;\">\n    <colgroup>\n      <col style=\"width: 100px\" />\n      <col style=\"width: 190px\" />\n      <col style=\"width: 150px\" />\n      <col style=\"width: 180px\" />\n      <col style=\"width: 200px\" />\n      <col style=\"width: 100px\" />\n    </colgroup>\n    <thead>\n      <tr>\n        <th scope=\"col\">자재ID</th>\n        <th scope=\"col\">자재명</th>\n        <th scope=\"col\">수량</th>\n        <th scope=\"col\">총가격</th>\n        <th scope=\"col\">거래처</th>\n        <th scope=\"col\">발주</th>\n      </tr>\n    </thead>\n    <tbody class=\"align-middle\">\n      <!-- 필터.. -->\n      <tr v-for=\"(item, index) in inventoryPurPlan\" :key=\"index\">\n        <td>{{ item['자재번호'] }}</td>\n        <td>{{ item['자재명'] }}</td>\n        <td class=\"text-end pe-4\">{{ formatNumber(item['총합']) }}</td>\n        <td class=\"text-end pe-4\">{{ formatNumber(item['총가격']) }}원</td>\n        <td>{{ item['거래처명'] }}</td>\n        <!--생산계획 버튼-->\n        <!--생산계획모달 end-->\n        <td>\n          <button class=\"btn btn-success rounded-pill px-2 py-1\"\n            @click=\"minCheckAndPurOrd(item['자재번호'], item['총합'], item['계획ID'])\" type=\"button\">발주하기</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'InventoryCheck',\n  data() {\n    return {\n      inventoryStatus: [], //자재현황조회 \n      allPurPlan: [], //모든 자재구매계획 조회회\n      inventoryPurPlan: [], //발주처리된 자재구매계획 조회 \n      filteredPurPlan: [], //최소주문수량 이상인 자재구매계획 조회하기 \n      min: '', //최소수량 \n      rawData: [],\n      expandedReqNos: [], // ** 펼쳐진 출고요청번호 목록\n      proPlnData: [],\n      //자재요청클릭 \n      reqClickedList: [],\n      lotMinusDoneReqNo: [], //출고 마감 완료  \n      plnToOrdNo: [], //\n    };\n  },\n  async created() {\n    await this.fetchInventoryStatus(); // 아코디언 리스트\n    await this.fetchInventoryPurPlan(); // 자재구매계획 일단불러오기   \n    await this.filteredPurPlanList(); //수량을 \n  },\n  // ** 지시번호별 번호 묶기\n  computed: {\n    groupedInventory() {\n      const grouped = {}\n      this.inventoryStatus.forEach(item => {\n        const reqNo = item['계획ID']\n        if (!grouped[reqNo]) grouped[reqNo] = []\n        grouped[reqNo].push(item)\n      })\n      //\n      const filterGrouped = {}\n      for (const reqNo in grouped) {\n        const items = grouped[reqNo] // 계획 번호 하나당 처리된거, \n        const allDone = items.every(item =>\n          item['부족수량'] < 0\n          //  || item['자재처리결과'] ==='c3' || this.reqClickedList.includes(item['계획ID']+item['자재명'])\n        )\n        if (!allDone) {\n          filterGrouped[reqNo] = items\n        }\n      }\n      console.log(JSON.stringify(filterGrouped, null, 2));\n      return filterGrouped\n    }\n  },\n  methods: {\n    async fetchInventoryStatus() { // 아코디언에서 사용\n      try {\n        const result = await axios.get('/api/inventory/mtStatus')\n        this.inventoryStatus = result.data;\n        console.log('자재현황조회 성공', this.inventoryStatus);\n      } catch (error) {\n        console.error('자재출고요청 실패', error);\n      }\n    },\n    async fetchInventoryPurPlan() {\n      try {\n        const result = await axios.get('/api/getPurPlnChecked')\n        //allPurPlan 모든 자재구매계획을 불러옴 \n        this.allPurPlan = result.data;\n        // 자재구매계획 -> 발주 처리된 자재구매계획번호를 서버에서 불러옴  \n        //  // 발주처리된 자재구매계획은 안보여지게함    \n        const Nos = await axios.get('/api/PlnToOrd') //\n        this.plnToOrdNo = Nos.data.map(p => p['계획ID']);\n        console.log('allpurPlan', this.allPurPlan);\n        console.log(this.plnToOrdNo);\n        this.inventoryPurPlan = this.allPurPlan.filter(p => !this.plnToOrdNo.includes(p['계획ID']));\n      } catch (error) {\n        console.log('자재구매계획 실패', error);\n      }\n    },\n    async filteredPurPlanList() {\n      const rawData = this.inventoryPurPlan; //item['자재ID']='M-001'\n      console.log('필터링전 rawdata', rawData);\n      const filtered = []; //수량이  \n      for (const item of rawData) {\n        const matId = item['자재ID'];\n        const minQty = await this.getMinOrdqty(matId);\n        //   console.log('minQty',minQty.min_ord_qty); \n        // console.log('for문 minQty',minQty); \n        //  console.log('item수량'); \n        //  console.log(item['수량']); \n        // if (item['수량'] >= minQty.min_ord_qty) {\n        //   filtered.push(item);\n        //   // console.log('필터링배열',filtered); \n        // } else {\n        //   // console.log('최소주문수량보다 작음');\n        // }\n      }//end of for \n      this.filteredPurPlan = filtered;\n      //console.log('필터링된 자재구매계획',this.filteredPurPlan);\n    },\n    async getMinOrdqty(matId) {\n      try { //\n        const minqty = await axios.get('/api/inventory/minqty', {\n          params: {\n            matId: matId\n          }\n        })\n        console.log('minqty', minqty.data[0]);\n        return minqty.data[0]; //최소량 return \n      } catch (error) {\n        console.log(error);\n      }\n    },\n    //발주하기 버튼 누르면 발주 처리됨 \n    async addPurOrdByPlnNo(purPlnNo) {\n      try {\n        const add = await axios.post('/api/inventory/purOrd', {\n          params: {\n            purPlnNo: purPlnNo\n          }\n        })\n        console.log('발주버튼클릭');\n        console.log(purPlnNo);\n        console.log('add', add);\n        //fetchInventoryPurPlan()\n        await this.fetchInventoryPurPlan();\n        return add;\n      } catch (error) {\n        console.log(error,);\n      }\n    },\n    //** */ 아코디언 토글\n    toggleAccordion(reqNo) {\n      const idx = this.expandedReqNos.indexOf(reqNo)\n      if (idx >= 0) this.expandedReqNos.splice(idx, 1)\n      else this.expandedReqNos.push(reqNo)\n    },\n    // 아코디언 클릭 후 확인.\n    isExpanded(reqNo) {\n      return this.expandedReqNos.includes(reqNo)\n    },\n    //최소수량 체크후 발주하는 이벤트 \n    async minCheckAndPurOrd(matId, qty, plnNo) {\n      const result = await this.getMinOrdqty(matId); //해당 자재에 대한 최소수량 체크\n      const min = result.min_ord_qty;\n      console.log('최소수량', min);\n      if (qty >= min) {\n        await this.addPurOrdByPlnNo(plnNo);\n        alert('발주가 완료 되었습니다');\n      } else {\n        alert('최소수량을 넘기지 못해 주문할수 없습니다');\n      }\n    },\n    //생산계획 모달창에서 자재ID로 생산계획 조회하기 일단 나중에.... \n    async fetchPrdPlanByMatId(matId) {\n      try {\n        const result = await axios.get('/api/inventory/prdPlan', {\n          params: {\n            matId: matId\n          }\n        })\n        this.proPlnData = result.data;\n        console.log('생산계획조회', this.proPlnData);\n      } catch (error) {\n        console.log('생산계획조회 실패', error);\n      }\n    },\n\n    async checkMat(reqNo) {\n      //프론트에서 표시되는 자재 \n      const matList = this.groupedInventory[reqNo];\n      console.log('matList', matList);\n      //출고가능자재 \n      const availableMats = matList.filter(item => item['부족수량'] <= 0);\n      //자재구매계획 세워야하는 자재 \n      //const purPlnMats=matList.filter(item=>item['부족수량']>0);\n      try {\n        const payload = availableMats.map(item => ({\n          mat_no: item['자재ID'],\n          req_qty: item['총필요량'],\n          pln_id: item['계획ID']\n        }))\n        console.log('payload', payload);\n        //서버에서 출고완료 됐는지 안됐는지 확인\n        // 서버왜없지..?    \n        const matsts = await axios.get('/api/MatStatus', {\n          params: {\n            reqId: payload.pln_id,\n            matId: payload.mat_no\n          }\n        });\n        console.log('matsts', matsts);\n        //우선 조건문문 풀기 \n        // 출고가 가능한 애들은 우선 처리됨\n        await axios.post('/api/inventory/lotMinusList', payload); //자재차감 되고 자재출고처리 -> q2로 변환 \n      } catch (err) {\n        if (err.response && err.response.status === 400) {\n          alert(err.response.data.message);\n        } else {\n          alert('서버오류가 부족합니다')\n        }\n      }\n      console.log('availableMats', availableMats);\n      // console.log('matList',matList);\n      //출고완료된 재고는 removeList \n      // 모든 자재가 출고 가능한지 검사\n      const allAvailable = matList.every(item => {\n        const reqQty = parseFloat(item['총필요량']);\n        const curQty = parseFloat(item['현재재고']);\n        // console.log('allAvailabe실행중..',item);\n        return curQty >= reqQty;\n      });\n      if (!allAvailable) {\n        alert('일부 자재의 재고가 부족합니다.');\n        return;\n      }\n      console.log('matList', matList);\n      // for(const item of matList){\n      //  const plnId= item['계획ID'];\n      //  const reqQty=item['총필요량']; \n      //  const curQty=item['현재재고']; //\n      //  const matNo=item['자재ID']; \n      //  const minStk=item['최소재고량']; \n      //   //lot에 있는 현재재고가 더 많은경우  \n      //  if(curQty>=reqQty){\n      //   try{\n      //      const res=await axios.post('/api/inventory/lotMinus',{\n      //       mat_no:matNo, \n      //       req_qty:reqQty,\n      //       pln_id:plnId\n      //      });         \n      //      if(curQty<minStk){\n      //       console.log('자재구매계획으로 이동');\n      //      }\n      //      this.inventoryStatus=this.inventoryStatus.filter(item=>item['계획ID']!==reqNo);\n      //      this.expandedReqNos=this.expandedReqNos.filter(id=>id!==reqNo);\n      //      alert('출고가 완료 되었습니다'); \n      //   }catch(err){\n      //     console.log(err); \n      //     alert('실패')\n      //   }\n      //  }\n      //  //현재재고가 더 총필요량보다 적은경우 \n      // //   else if(curQty<reqQty){\n      // //  }\n      // }\n    },\n    goToReqPage(item) {\n      console.log('자재요청item', item);\n      this.$router.push({\n        name: 'MatReq',\n        query: {\n          matId: item['자재ID'],\n          matNm: item['자재명']\n        }\n      });\n    },\n    //자재요청버튼클릭 -> 자재구매계획 insert하기\n    async addPurOrd(item) {\n      console.log('자재요청item', item);\n      try {\n        const result = await axios.post('/api/inventory/purOrdByClickButton', {\n          matId: item['자재ID'],\n          vdrNo: item['대표거래처번호'],\n          vdrNm: item['거래처명'],\n          prc: item['단가'],\n          qty: item['부족수량'],\n          check: 'check',\n          reqId: item['계획ID'],\n        });\n\n        console.log('자재요청성공', result);\n        this.reqClickedList.push(item['계획ID'] + item['자재명']); //한페이지 안에서 머무르는건 가능.... \n        alert('자재요청이 완료 되었습니다');\n\n        const Nos = await axios.get('/api/PlnToOrd') //\n        this.plnToOrdNo = Nos.data.map(p => p['계획ID']);\n        console.log('allpurPlan', this.allPurPlan);\n        console.log(this.plnToOrdNo);\n        this.inventoryPurPlan = this.allPurPlan.filter(p => !this.plnToOrdNo.includes(p['계획ID']));\n      } catch (error) {\n        console.log('자재요청실패', error);\n      }\n    },\n    formatNumber(n) {\n      if (n == null || isNaN(n)) return '-'\n      return new Intl.NumberFormat().format(n)\n    },\n  }\n}\n\n</script>"],"names":["_sfc_main","grouped","item","reqNo","filterGrouped","items","result","axios","error","Nos","p","rawData","filtered","matId","minqty","purPlnNo","add","idx","qty","plnNo","min","matList","availableMats","payload","matsts","err","reqQty","n","_hoisted_2","_hoisted_3","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_20","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_openBlock","_createElementBlock","_Fragment","_cache","_createElementVNode","_hoisted_1","_renderList","$options","$event","_hoisted_4","_toDisplayString","_createTextVNode","_withModifiers","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_21","$data","_hoisted_22","_createCommentVNode","_hoisted_24","index"],"mappings":"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"}